{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nclass FileDropDirective {\n  constructor(element) {\n    this.fileOver = new EventEmitter();\n    // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n    this.onFileDrop = new EventEmitter();\n    this.element = element;\n  }\n  getOptions() {\n    var _a;\n    return (_a = this.uploader) === null || _a === void 0 ? void 0 : _a.options;\n  }\n  getFilters() {\n    return '';\n  }\n  onDrop(event) {\n    var _a;\n    const transfer = this._getTransfer(event);\n    if (!transfer) {\n      return;\n    }\n    const options = this.getOptions();\n    const filters = this.getFilters();\n    this._preventAndStop(event);\n    if (options) {\n      (_a = this.uploader) === null || _a === void 0 ? void 0 : _a.addToQueue(transfer.files, options, filters);\n    }\n    this.fileOver.emit(false);\n    this.onFileDrop.emit(transfer.files);\n  }\n  onDragOver(event) {\n    const transfer = this._getTransfer(event);\n    if (!this._haveFiles(transfer.types)) {\n      return;\n    }\n    transfer.dropEffect = 'copy';\n    this._preventAndStop(event);\n    this.fileOver.emit(true);\n  }\n  onDragLeave(event) {\n    if (this.element) {\n      if (event.currentTarget === this.element[0]) {\n        return;\n      }\n    }\n    this._preventAndStop(event);\n    this.fileOver.emit(false);\n  }\n  _getTransfer(event) {\n    return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n  }\n\n  _preventAndStop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  _haveFiles(types) {\n    if (!types) {\n      return false;\n    }\n    if (types.indexOf) {\n      return types.indexOf('Files') !== -1;\n    } else if (types.contains) {\n      return types.contains('Files');\n    } else {\n      return false;\n    }\n  }\n}\nFileDropDirective.ɵfac = function FileDropDirective_Factory(t) {\n  return new (t || FileDropDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nFileDropDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FileDropDirective,\n  selectors: [[\"\", \"ng2FileDrop\", \"\"]],\n  hostBindings: function FileDropDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"drop\", function FileDropDirective_drop_HostBindingHandler($event) {\n        return ctx.onDrop($event);\n      })(\"dragover\", function FileDropDirective_dragover_HostBindingHandler($event) {\n        return ctx.onDragOver($event);\n      })(\"dragleave\", function FileDropDirective_dragleave_HostBindingHandler($event) {\n        return ctx.onDragLeave($event);\n      });\n    }\n  },\n  inputs: {\n    uploader: \"uploader\"\n  },\n  outputs: {\n    fileOver: \"fileOver\",\n    onFileDrop: \"onFileDrop\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FileDropDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng2FileDrop]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    uploader: [{\n      type: Input\n    }],\n    fileOver: [{\n      type: Output\n    }],\n    onFileDrop: [{\n      type: Output\n    }],\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }],\n    onDragOver: [{\n      type: HostListener,\n      args: ['dragover', ['$event']]\n    }],\n    onDragLeave: [{\n      type: HostListener,\n      args: ['dragleave', ['$event']]\n    }]\n  });\n})();\nclass FileLikeObject {\n  constructor(fileOrInput) {\n    this.rawFile = fileOrInput;\n    const fakePathOrObject = fileOrInput instanceof HTMLInputElement ? fileOrInput.value : fileOrInput;\n    const postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n    const method = `_createFrom${postfix}`;\n    this[method](fakePathOrObject);\n  }\n  _createFromFakePath(path) {\n    this.lastModifiedDate = void 0;\n    this.size = void 0;\n    this.type = `like/${path.slice(path.lastIndexOf('.') + 1).toLowerCase()}`;\n    this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n  }\n  _createFromObject(object) {\n    this.size = object.size;\n    this.type = object.type;\n    this.name = object.name;\n  }\n}\nclass FileItem {\n  constructor(uploader, some, options) {\n    this.url = '/';\n    this.headers = [];\n    this.withCredentials = true;\n    this.formData = [];\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 0;\n    this.uploader = uploader;\n    this.some = some;\n    this.options = options;\n    this.file = new FileLikeObject(some);\n    this._file = some;\n    if (uploader.options) {\n      this.method = uploader.options.method || 'POST';\n      this.alias = uploader.options.itemAlias || 'file';\n    }\n    this.url = uploader.options.url;\n  }\n  upload() {\n    try {\n      this.uploader.uploadItem(this);\n    } catch (e) {\n      this.uploader._onCompleteItem(this, '', 0, {});\n      this.uploader._onErrorItem(this, '', 0, {});\n    }\n  }\n  cancel() {\n    this.uploader.cancelItem(this);\n  }\n  remove() {\n    this.uploader.removeFromQueue(this);\n  }\n  onBeforeUpload() {\n    return void 0;\n  }\n  onBuildForm(form) {\n    return {\n      form\n    };\n  }\n  onProgress(progress) {\n    return {\n      progress\n    };\n  }\n  onSuccess(response, status, headers) {\n    return {\n      response,\n      status,\n      headers\n    };\n  }\n  onError(response, status, headers) {\n    return {\n      response,\n      status,\n      headers\n    };\n  }\n  onCancel(response, status, headers) {\n    return {\n      response,\n      status,\n      headers\n    };\n  }\n  onComplete(response, status, headers) {\n    return {\n      response,\n      status,\n      headers\n    };\n  }\n  _onBeforeUpload() {\n    this.isReady = true;\n    this.isUploading = true;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 0;\n    this.onBeforeUpload();\n  }\n  _onBuildForm(form) {\n    this.onBuildForm(form);\n  }\n  _onProgress(progress) {\n    this.progress = progress;\n    this.onProgress(progress);\n  }\n  _onSuccess(response, status, headers) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = true;\n    this.isSuccess = true;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 100;\n    this.index = undefined;\n    this.onSuccess(response, status, headers);\n  }\n  _onError(response, status, headers) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = true;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = true;\n    this.progress = 0;\n    this.index = undefined;\n    this.onError(response, status, headers);\n  }\n  _onCancel(response, status, headers) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = true;\n    this.isError = false;\n    this.progress = 0;\n    this.index = undefined;\n    this.onCancel(response, status, headers);\n  }\n  _onComplete(response, status, headers) {\n    this.onComplete(response, status, headers);\n    if (this.uploader.options.removeAfterUpload) {\n      this.remove();\n    }\n  }\n  _prepareToUploading() {\n    this.index = this.index || ++this.uploader._nextIndex;\n    this.isReady = true;\n  }\n}\nclass FileType {\n  static getMimeClass(file) {\n    var _a, _b, _c;\n    let mimeClass = 'application';\n    if ((file === null || file === void 0 ? void 0 : file.type) && this.mime_psd.indexOf(file.type) !== -1) {\n      mimeClass = 'image';\n    } else if ((_a = file === null || file === void 0 ? void 0 : file.type) === null || _a === void 0 ? void 0 : _a.match('image.*')) {\n      mimeClass = 'image';\n    } else if ((_b = file === null || file === void 0 ? void 0 : file.type) === null || _b === void 0 ? void 0 : _b.match('video.*')) {\n      mimeClass = 'video';\n    } else if ((_c = file === null || file === void 0 ? void 0 : file.type) === null || _c === void 0 ? void 0 : _c.match('audio.*')) {\n      mimeClass = 'audio';\n    } else if ((file === null || file === void 0 ? void 0 : file.type) === 'application/pdf') {\n      mimeClass = 'pdf';\n    } else if ((file === null || file === void 0 ? void 0 : file.type) && this.mime_compress.indexOf(file.type) !== -1) {\n      mimeClass = 'compress';\n    } else if ((file === null || file === void 0 ? void 0 : file.type) && this.mime_doc.indexOf(file.type) !== -1) {\n      mimeClass = 'doc';\n    } else if ((file === null || file === void 0 ? void 0 : file.type) && this.mime_xsl.indexOf(file.type) !== -1) {\n      mimeClass = 'xls';\n    } else if ((file === null || file === void 0 ? void 0 : file.type) && this.mime_ppt.indexOf(file.type) !== -1) {\n      mimeClass = 'ppt';\n    }\n    if (mimeClass === 'application' && (file === null || file === void 0 ? void 0 : file.name)) {\n      mimeClass = this.fileTypeDetection(file.name);\n    }\n    return mimeClass;\n  }\n  static fileTypeDetection(inputFilename) {\n    const types = {\n      jpg: 'image',\n      jpeg: 'image',\n      tif: 'image',\n      psd: 'image',\n      bmp: 'image',\n      png: 'image',\n      nef: 'image',\n      tiff: 'image',\n      cr2: 'image',\n      dwg: 'image',\n      cdr: 'image',\n      ai: 'image',\n      indd: 'image',\n      pin: 'image',\n      cdp: 'image',\n      skp: 'image',\n      stp: 'image',\n      '3dm': 'image',\n      mp3: 'audio',\n      wav: 'audio',\n      wma: 'audio',\n      mod: 'audio',\n      m4a: 'audio',\n      compress: 'compress',\n      zip: 'compress',\n      rar: 'compress',\n      '7z': 'compress',\n      lz: 'compress',\n      z01: 'compress',\n      bz2: 'compress',\n      gz: 'compress',\n      pdf: 'pdf',\n      xls: 'xls',\n      xlsx: 'xls',\n      ods: 'xls',\n      mp4: 'video',\n      avi: 'video',\n      wmv: 'video',\n      mpg: 'video',\n      mts: 'video',\n      flv: 'video',\n      '3gp': 'video',\n      vob: 'video',\n      m4v: 'video',\n      mpeg: 'video',\n      m2ts: 'video',\n      mov: 'video',\n      doc: 'doc',\n      docx: 'doc',\n      eps: 'doc',\n      txt: 'doc',\n      odt: 'doc',\n      rtf: 'doc',\n      ppt: 'ppt',\n      pptx: 'ppt',\n      pps: 'ppt',\n      ppsx: 'ppt',\n      odp: 'ppt'\n    };\n    const chunks = inputFilename.split('.');\n    if (chunks.length < 2) {\n      return 'application';\n    }\n    const extension = chunks[chunks.length - 1].toLowerCase();\n    if (types[extension] === undefined) {\n      return 'application';\n    } else {\n      return types[extension];\n    }\n  }\n}\n/*  MS office  */\n// tslint:disable-next-line:variable-name\nFileType.mime_doc = ['application/msword', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template', 'application/vnd.ms-word.document.macroEnabled.12', 'application/vnd.ms-word.template.macroEnabled.12'];\n// tslint:disable-next-line:variable-name\nFileType.mime_xsl = ['application/vnd.ms-excel', 'application/vnd.ms-excel', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template', 'application/vnd.ms-excel.sheet.macroEnabled.12', 'application/vnd.ms-excel.template.macroEnabled.12', 'application/vnd.ms-excel.addin.macroEnabled.12', 'application/vnd.ms-excel.sheet.binary.macroEnabled.12'];\n// tslint:disable-next-line:variable-name\nFileType.mime_ppt = ['application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/vnd.openxmlformats-officedocument.presentationml.template', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow', 'application/vnd.ms-powerpoint.addin.macroEnabled.12', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12', 'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'];\n/* PSD */\n// tslint:disable-next-line:variable-name\nFileType.mime_psd = ['image/photoshop', 'image/x-photoshop', 'image/psd', 'application/photoshop', 'application/psd', 'zz-application/zz-winassoc-psd'];\n/* Compressed files */\n// tslint:disable-next-line:variable-name\nFileType.mime_compress = ['application/x-gtar', 'application/x-gcompress', 'application/compress', 'application/x-tar', 'application/x-rar-compressed', 'application/octet-stream', 'application/x-zip-compressed', 'application/zip-compressed', 'application/x-7z-compressed', 'application/gzip', 'application/x-bzip2'];\nfunction isFile(value) {\n  return File && value instanceof File;\n}\nclass FileUploader {\n  constructor(options) {\n    this.isUploading = false;\n    this.queue = [];\n    this.progress = 0;\n    this._nextIndex = 0;\n    this.options = {\n      autoUpload: false,\n      isHTML5: true,\n      filters: [],\n      removeAfterUpload: false,\n      disableMultipart: false,\n      formatDataFunction: item => item._file,\n      formatDataFunctionIsAsync: false,\n      url: ''\n    };\n    this.setOptions(options);\n    this.response = new EventEmitter();\n  }\n  setOptions(options) {\n    var _a, _b, _c, _d;\n    this.options = Object.assign(this.options, options);\n    this.authToken = this.options.authToken;\n    this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n    this.autoUpload = this.options.autoUpload;\n    (_a = this.options.filters) === null || _a === void 0 ? void 0 : _a.unshift({\n      name: 'queueLimit',\n      fn: this._queueLimitFilter\n    });\n    if (this.options.maxFileSize) {\n      (_b = this.options.filters) === null || _b === void 0 ? void 0 : _b.unshift({\n        name: 'fileSize',\n        fn: this._fileSizeFilter\n      });\n    }\n    if (this.options.allowedFileType) {\n      (_c = this.options.filters) === null || _c === void 0 ? void 0 : _c.unshift({\n        name: 'fileType',\n        fn: this._fileTypeFilter\n      });\n    }\n    if (this.options.allowedMimeType) {\n      (_d = this.options.filters) === null || _d === void 0 ? void 0 : _d.unshift({\n        name: 'mimeType',\n        fn: this._mimeTypeFilter\n      });\n    }\n    for (let i = 0; i < this.queue.length; i++) {\n      this.queue[i].url = this.options.url;\n    }\n  }\n  addToQueue(files, _options, filters) {\n    let options = _options;\n    const list = [];\n    for (const file of files) {\n      list.push(file);\n    }\n    const arrayOfFilters = this._getFilters(filters);\n    const count = this.queue.length;\n    const addedFileItems = [];\n    list.map(some => {\n      if (!options) {\n        options = this.options;\n      }\n      const temp = new FileLikeObject(some);\n      if (this._isValidFile(temp, arrayOfFilters, options)) {\n        const fileItem = new FileItem(this, some, options);\n        addedFileItems.push(fileItem);\n        this.queue.push(fileItem);\n        this._onAfterAddingFile(fileItem);\n      } else {\n        if (this._failFilterIndex) {\n          const filter = arrayOfFilters[this._failFilterIndex];\n          this._onWhenAddingFileFailed(temp, filter, options);\n        }\n      }\n    });\n    if (this.queue.length !== count) {\n      this._onAfterAddingAll(addedFileItems);\n      this.progress = this._getTotalProgress();\n    }\n    this._render();\n    if (this.options.autoUpload) {\n      this.uploadAll();\n    }\n  }\n  removeFromQueue(value) {\n    const index = this.getIndexOfItem(value);\n    const item = this.queue[index];\n    if (item.isUploading) {\n      item.cancel();\n    }\n    this.queue.splice(index, 1);\n    this.progress = this._getTotalProgress();\n  }\n  clearQueue() {\n    while (this.queue.length) {\n      this.queue[0].remove();\n    }\n    this.progress = 0;\n  }\n  uploadItem(value) {\n    const index = this.getIndexOfItem(value);\n    const item = this.queue[index];\n    const transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n    item._prepareToUploading();\n    if (this.isUploading) {\n      return;\n    }\n    this.isUploading = true;\n    this[transport](item);\n  }\n  cancelItem(value) {\n    const index = this.getIndexOfItem(value);\n    const item = this.queue[index];\n    const prop = this.options.isHTML5 ? item._xhr : item._form;\n    if (item && item.isUploading) {\n      prop.abort();\n    }\n  }\n  uploadAll() {\n    const items = this.getNotUploadedItems().filter(item => !item.isUploading);\n    if (!items.length) {\n      return;\n    }\n    items.map(item => item._prepareToUploading());\n    items[0].upload();\n  }\n  cancelAll() {\n    const items = this.getNotUploadedItems();\n    items.map(item => item.cancel());\n  }\n  isFile(value) {\n    return isFile(value);\n  }\n  isFileLikeObject(value) {\n    return value instanceof FileLikeObject;\n  }\n  getIndexOfItem(value) {\n    return typeof value === 'number' ? value : this.queue.indexOf(value);\n  }\n  getNotUploadedItems() {\n    return this.queue.filter(item => !item.isUploaded);\n  }\n  getReadyItems() {\n    return this.queue.filter(item => item.isReady && !item.isUploading).sort((item1, item2) => item1.index - item2.index);\n  }\n  onAfterAddingAll(fileItems) {\n    return {\n      fileItems\n    };\n  }\n  onBuildItemForm(fileItem, form) {\n    return {\n      fileItem,\n      form\n    };\n  }\n  onAfterAddingFile(fileItem) {\n    return {\n      fileItem\n    };\n  }\n  onWhenAddingFileFailed(item, filter, options) {\n    return {\n      item,\n      filter,\n      options\n    };\n  }\n  onBeforeUploadItem(fileItem) {\n    return {\n      fileItem\n    };\n  }\n  onProgressItem(fileItem, progress) {\n    return {\n      fileItem,\n      progress\n    };\n  }\n  onProgressAll(progress) {\n    return {\n      progress\n    };\n  }\n  onSuccessItem(item, response, status, headers) {\n    return {\n      item,\n      response,\n      status,\n      headers\n    };\n  }\n  onErrorItem(item, response, status, headers) {\n    return {\n      item,\n      response,\n      status,\n      headers\n    };\n  }\n  onCancelItem(item, response, status, headers) {\n    return {\n      item,\n      response,\n      status,\n      headers\n    };\n  }\n  onCompleteItem(item, response, status, headers) {\n    return {\n      item,\n      response,\n      status,\n      headers\n    };\n  }\n  onCompleteAll() {\n    return void 0;\n  }\n  _mimeTypeFilter(item) {\n    var _a;\n    return !((item === null || item === void 0 ? void 0 : item.type) && this.options.allowedMimeType && ((_a = this.options.allowedMimeType) === null || _a === void 0 ? void 0 : _a.indexOf(item.type)) === -1);\n  }\n  _fileSizeFilter(item) {\n    return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n  }\n  _fileTypeFilter(item) {\n    return !(this.options.allowedFileType && this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n  }\n  _onErrorItem(item, response, status, headers) {\n    item._onError(response, status, headers);\n    this.onErrorItem(item, response, status, headers);\n  }\n  _onCompleteItem(item, response, status, headers) {\n    item._onComplete(response, status, headers);\n    this.onCompleteItem(item, response, status, headers);\n    const nextItem = this.getReadyItems()[0];\n    this.isUploading = false;\n    if (nextItem) {\n      nextItem.upload();\n      return;\n    }\n    this.onCompleteAll();\n    this.progress = this._getTotalProgress();\n    this._render();\n  }\n  _headersGetter(parsedHeaders) {\n    return name => {\n      if (name) {\n        return parsedHeaders[name.toLowerCase()] || undefined;\n      }\n      return parsedHeaders;\n    };\n  }\n  _xhrTransport(item) {\n    // tslint:disable-next-line:no-this-assignment\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const that = this;\n    const xhr = item._xhr = new XMLHttpRequest();\n    let sendable;\n    this._onBeforeUploadItem(item);\n    if (typeof item._file.size !== 'number') {\n      throw new TypeError('The file specified is no longer valid');\n    }\n    if (!this.options.disableMultipart) {\n      sendable = new FormData();\n      this._onBuildItemForm(item, sendable);\n      const appendFile = () => sendable.append(item.alias, item._file, item.file.name);\n      if (!this.options.parametersBeforeFiles) {\n        appendFile();\n      }\n      // For AWS, Additional Parameters must come BEFORE Files\n      if (this.options.additionalParameter !== undefined) {\n        Object.keys(this.options.additionalParameter).forEach(key => {\n          var _a, _b;\n          let paramVal = (_a = this.options.additionalParameter) === null || _a === void 0 ? void 0 : _a[key];\n          // Allow an additional parameter to include the filename\n          if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0 && ((_b = item.file) === null || _b === void 0 ? void 0 : _b.name)) {\n            paramVal = paramVal.replace('{{file_name}}', item.file.name);\n          }\n          sendable.append(key, paramVal);\n        });\n      }\n      if (appendFile && this.options.parametersBeforeFiles) {\n        appendFile();\n      }\n    } else {\n      if (this.options.formatDataFunction) {\n        sendable = this.options.formatDataFunction(item);\n      }\n    }\n    xhr.upload.onprogress = event => {\n      const progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n      this._onProgressItem(item, progress);\n    };\n    xhr.onload = () => {\n      const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      const response = this._transformResponse(xhr.response, headers);\n      const gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n      const method = `_on${gist}Item`;\n      this[method](item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n    xhr.onerror = () => {\n      const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      const response = this._transformResponse(xhr.response, headers);\n      this._onErrorItem(item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n    xhr.onabort = () => {\n      const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      const response = this._transformResponse(xhr.response, headers);\n      this._onCancelItem(item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n    if (item.method && item.url) {\n      xhr.open(item.method, item.url, true);\n    }\n    xhr.withCredentials = item.withCredentials;\n    if (this.options.headers) {\n      for (const header of this.options.headers) {\n        xhr.setRequestHeader(header.name, header.value);\n      }\n    }\n    if (item.headers.length) {\n      for (const header of item.headers) {\n        xhr.setRequestHeader(header.name, header.value);\n      }\n    }\n    if (this.authToken && this.authTokenHeader) {\n      xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n    }\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == XMLHttpRequest.DONE) {\n        that.response.emit(xhr.responseText);\n      }\n    };\n    if (this.options.formatDataFunctionIsAsync) {\n      sendable.then(result => xhr.send(JSON.stringify(result)));\n    } else {\n      xhr.send(sendable);\n    }\n    this._render();\n  }\n  _getTotalProgress(value = 0) {\n    if (this.options.removeAfterUpload) {\n      return value;\n    }\n    const notUploaded = this.getNotUploadedItems().length;\n    const uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n    const ratio = 100 / this.queue.length;\n    const current = value * ratio / 100;\n    return Math.round(uploaded * ratio + current);\n  }\n  _getFilters(filters) {\n    var _a, _b, _c;\n    if (!filters) {\n      return ((_a = this.options) === null || _a === void 0 ? void 0 : _a.filters) || [];\n    }\n    if (Array.isArray(filters)) {\n      return filters;\n    }\n    if (typeof filters === 'string') {\n      const names = filters.match(/[^\\s,]+/g);\n      return ((_b = this.options) === null || _b === void 0 ? void 0 : _b.filters) || [].filter(filter => (names === null || names === void 0 ? void 0 : names.indexOf(filter.name)) !== -1);\n    }\n    return ((_c = this.options) === null || _c === void 0 ? void 0 : _c.filters) || [];\n  }\n  _render() {\n    return void 0;\n  }\n  _queueLimitFilter() {\n    return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n  }\n  _isValidFile(file, filters, options) {\n    this._failFilterIndex = -1;\n    return !filters.length ? true : filters.every(filter => {\n      if (this._failFilterIndex) {\n        this._failFilterIndex++;\n      }\n      return filter.fn.call(this, file, options);\n    });\n  }\n  _isSuccessCode(status) {\n    return status >= 200 && status < 300 || status === 304;\n  }\n  _transformResponse(response, headers) {\n    return response;\n  }\n  _parseHeaders(headers) {\n    const parsed = {};\n    let key;\n    let val;\n    let i;\n    if (!headers) {\n      return parsed;\n    }\n    headers.split('\\n').map(line => {\n      i = line.indexOf(':');\n      key = line.slice(0, i).trim().toLowerCase();\n      val = line.slice(i + 1).trim();\n      if (key) {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    });\n    return parsed;\n  }\n  _onWhenAddingFileFailed(item, filter, options) {\n    this.onWhenAddingFileFailed(item, filter, options);\n  }\n  _onAfterAddingFile(item) {\n    this.onAfterAddingFile(item);\n  }\n  _onAfterAddingAll(items) {\n    this.onAfterAddingAll(items);\n  }\n  _onBeforeUploadItem(item) {\n    item._onBeforeUpload();\n    this.onBeforeUploadItem(item);\n  }\n  _onBuildItemForm(item, form) {\n    item._onBuildForm(form);\n    this.onBuildItemForm(item, form);\n  }\n  _onProgressItem(item, progress) {\n    const total = this._getTotalProgress(progress);\n    this.progress = total;\n    item._onProgress(progress);\n    this.onProgressItem(item, progress);\n    this.onProgressAll(total);\n    this._render();\n  }\n  _onSuccessItem(item, response, status, headers) {\n    item._onSuccess(response, status, headers);\n    this.onSuccessItem(item, response, status, headers);\n  }\n  _onCancelItem(item, response, status, headers) {\n    item._onCancel(response, status, headers);\n    this.onCancelItem(item, response, status, headers);\n  }\n}\nclass FileSelectDirective {\n  constructor(element) {\n    // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n    this.onFileSelected = new EventEmitter();\n    this.element = element;\n  }\n  getOptions() {\n    var _a;\n    return (_a = this.uploader) === null || _a === void 0 ? void 0 : _a.options;\n  }\n  getFilters() {\n    return '';\n  }\n  isEmptyAfterSelection() {\n    return !!this.element.nativeElement.attributes.multiple;\n  }\n  onChange() {\n    var _a;\n    const files = this.element.nativeElement.files;\n    const options = this.getOptions();\n    const filters = this.getFilters();\n    (_a = this.uploader) === null || _a === void 0 ? void 0 : _a.addToQueue(files, options, filters);\n    this.onFileSelected.emit(files);\n    if (this.isEmptyAfterSelection()) {\n      this.element.nativeElement.value = '';\n    }\n  }\n}\nFileSelectDirective.ɵfac = function FileSelectDirective_Factory(t) {\n  return new (t || FileSelectDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nFileSelectDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: FileSelectDirective,\n  selectors: [[\"\", \"ng2FileSelect\", \"\"]],\n  hostBindings: function FileSelectDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"change\", function FileSelectDirective_change_HostBindingHandler() {\n        return ctx.onChange();\n      });\n    }\n  },\n  inputs: {\n    uploader: \"uploader\"\n  },\n  outputs: {\n    onFileSelected: \"onFileSelected\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FileSelectDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ng2FileSelect]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    uploader: [{\n      type: Input\n    }],\n    onFileSelected: [{\n      type: Output\n    }],\n    onChange: [{\n      type: HostListener,\n      args: ['change']\n    }]\n  });\n})();\nclass FileUploadModule {}\nFileUploadModule.ɵfac = function FileUploadModule_Factory(t) {\n  return new (t || FileUploadModule)();\n};\nFileUploadModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: FileUploadModule\n});\nFileUploadModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FileUploadModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [FileDropDirective, FileSelectDirective],\n      exports: [FileDropDirective, FileSelectDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };","map":{"version":3,"names":["i0","EventEmitter","Directive","Input","Output","HostListener","NgModule","CommonModule","FileDropDirective","constructor","element","fileOver","onFileDrop","getOptions","_a","uploader","options","getFilters","onDrop","event","transfer","_getTransfer","filters","_preventAndStop","addToQueue","files","emit","onDragOver","_haveFiles","types","dropEffect","onDragLeave","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","indexOf","contains","ɵfac","ElementRef","ɵdir","type","args","selector","FileLikeObject","fileOrInput","rawFile","fakePathOrObject","HTMLInputElement","value","postfix","method","_createFromFakePath","path","lastModifiedDate","size","slice","lastIndexOf","toLowerCase","name","_createFromObject","object","FileItem","some","url","headers","withCredentials","formData","isReady","isUploading","isUploaded","isSuccess","isCancel","isError","progress","file","_file","alias","itemAlias","upload","uploadItem","e","_onCompleteItem","_onErrorItem","cancel","cancelItem","remove","removeFromQueue","onBeforeUpload","onBuildForm","form","onProgress","onSuccess","response","status","onError","onCancel","onComplete","_onBeforeUpload","_onBuildForm","_onProgress","_onSuccess","index","undefined","_onError","_onCancel","_onComplete","removeAfterUpload","_prepareToUploading","_nextIndex","FileType","getMimeClass","_b","_c","mimeClass","mime_psd","match","mime_compress","mime_doc","mime_xsl","mime_ppt","fileTypeDetection","inputFilename","jpg","jpeg","tif","psd","bmp","png","nef","tiff","cr2","dwg","cdr","ai","indd","pin","cdp","skp","stp","mp3","wav","wma","mod","m4a","compress","zip","rar","lz","z01","bz2","gz","pdf","xls","xlsx","ods","mp4","avi","wmv","mpg","mts","flv","vob","m4v","mpeg","m2ts","mov","doc","docx","eps","txt","odt","rtf","ppt","pptx","pps","ppsx","odp","chunks","split","length","extension","isFile","File","FileUploader","queue","autoUpload","isHTML5","disableMultipart","formatDataFunction","item","formatDataFunctionIsAsync","setOptions","_d","Object","assign","authToken","authTokenHeader","unshift","fn","_queueLimitFilter","maxFileSize","_fileSizeFilter","allowedFileType","_fileTypeFilter","allowedMimeType","_mimeTypeFilter","i","_options","list","push","arrayOfFilters","_getFilters","count","addedFileItems","map","temp","_isValidFile","fileItem","_onAfterAddingFile","_failFilterIndex","filter","_onWhenAddingFileFailed","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","getIndexOfItem","splice","clearQueue","transport","prop","_xhr","_form","abort","items","getNotUploadedItems","cancelAll","isFileLikeObject","getReadyItems","sort","item1","item2","onAfterAddingAll","fileItems","onBuildItemForm","onAfterAddingFile","onWhenAddingFileFailed","onBeforeUploadItem","onProgressItem","onProgressAll","onSuccessItem","onErrorItem","onCancelItem","onCompleteItem","onCompleteAll","nextItem","_headersGetter","parsedHeaders","_xhrTransport","that","xhr","XMLHttpRequest","sendable","_onBeforeUploadItem","TypeError","FormData","_onBuildItemForm","appendFile","append","parametersBeforeFiles","additionalParameter","keys","forEach","key","paramVal","replace","onprogress","Math","round","lengthComputable","loaded","total","_onProgressItem","onload","_parseHeaders","getAllResponseHeaders","_transformResponse","gist","_isSuccessCode","onerror","onabort","_onCancelItem","open","header","setRequestHeader","onreadystatechange","readyState","DONE","responseText","then","result","send","JSON","stringify","notUploaded","uploaded","ratio","current","Array","isArray","names","queueLimit","every","call","parsed","val","line","trim","_onSuccessItem","FileSelectDirective","onFileSelected","isEmptyAfterSelection","nativeElement","attributes","multiple","onChange","FileUploadModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["D:/Learning Everything Related to Asp Net Core/Angular/Original Project/Project/DatingApp/client/node_modules/ng2-file-upload/fesm2015/ng2-file-upload.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nclass FileDropDirective {\n    constructor(element) {\n        this.fileOver = new EventEmitter();\n        // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n        this.onFileDrop = new EventEmitter();\n        this.element = element;\n    }\n    getOptions() {\n        var _a;\n        return (_a = this.uploader) === null || _a === void 0 ? void 0 : _a.options;\n    }\n    getFilters() {\n        return '';\n    }\n    onDrop(event) {\n        var _a;\n        const transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        const options = this.getOptions();\n        const filters = this.getFilters();\n        this._preventAndStop(event);\n        if (options) {\n            (_a = this.uploader) === null || _a === void 0 ? void 0 : _a.addToQueue(transfer.files, options, filters);\n        }\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    }\n    onDragOver(event) {\n        const transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    }\n    onDragLeave(event) {\n        if (this.element) {\n            if (event.currentTarget === this.element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    }\n    _getTransfer(event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    }\n    _preventAndStop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    _haveFiles(types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    }\n}\nFileDropDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: FileDropDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nFileDropDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"14.2.2\", type: FileDropDirective, selector: \"[ng2FileDrop]\", inputs: { uploader: \"uploader\" }, outputs: { fileOver: \"fileOver\", onFileDrop: \"onFileDrop\" }, host: { listeners: { \"drop\": \"onDrop($event)\", \"dragover\": \"onDragOver($event)\", \"dragleave\": \"onDragLeave($event)\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: FileDropDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ng2FileDrop]' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { uploader: [{\n                type: Input\n            }], fileOver: [{\n                type: Output\n            }], onFileDrop: [{\n                type: Output\n            }], onDrop: [{\n                type: HostListener,\n                args: ['drop', ['$event']]\n            }], onDragOver: [{\n                type: HostListener,\n                args: ['dragover', ['$event']]\n            }], onDragLeave: [{\n                type: HostListener,\n                args: ['dragleave', ['$event']]\n            }] } });\n\nclass FileLikeObject {\n    constructor(fileOrInput) {\n        this.rawFile = fileOrInput;\n        const fakePathOrObject = fileOrInput instanceof HTMLInputElement ? fileOrInput.value : fileOrInput;\n        const postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        const method = `_createFrom${postfix}`;\n        this[method](fakePathOrObject);\n    }\n    _createFromFakePath(path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = `like/${path.slice(path.lastIndexOf('.') + 1).toLowerCase()}`;\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n    _createFromObject(object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    }\n}\n\nclass FileItem {\n    constructor(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    upload() {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    }\n    cancel() {\n        this.uploader.cancelItem(this);\n    }\n    remove() {\n        this.uploader.removeFromQueue(this);\n    }\n    onBeforeUpload() {\n        return void 0;\n    }\n    onBuildForm(form) {\n        return { form };\n    }\n    onProgress(progress) {\n        return { progress };\n    }\n    onSuccess(response, status, headers) {\n        return { response, status, headers };\n    }\n    onError(response, status, headers) {\n        return { response, status, headers };\n    }\n    onCancel(response, status, headers) {\n        return { response, status, headers };\n    }\n    onComplete(response, status, headers) {\n        return { response, status, headers };\n    }\n    _onBeforeUpload() {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    }\n    _onBuildForm(form) {\n        this.onBuildForm(form);\n    }\n    _onProgress(progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    }\n    _onSuccess(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = undefined;\n        this.onSuccess(response, status, headers);\n    }\n    _onError(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = undefined;\n        this.onError(response, status, headers);\n    }\n    _onCancel(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = undefined;\n        this.onCancel(response, status, headers);\n    }\n    _onComplete(response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    }\n    _prepareToUploading() {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    }\n}\n\nclass FileType {\n    static getMimeClass(file) {\n        var _a, _b, _c;\n        let mimeClass = 'application';\n        if ((file === null || file === void 0 ? void 0 : file.type) && this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if ((_a = file === null || file === void 0 ? void 0 : file.type) === null || _a === void 0 ? void 0 : _a.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if ((_b = file === null || file === void 0 ? void 0 : file.type) === null || _b === void 0 ? void 0 : _b.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if ((_c = file === null || file === void 0 ? void 0 : file.type) === null || _c === void 0 ? void 0 : _c.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if ((file === null || file === void 0 ? void 0 : file.type) === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if ((file === null || file === void 0 ? void 0 : file.type) && this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if ((file === null || file === void 0 ? void 0 : file.type) && this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if ((file === null || file === void 0 ? void 0 : file.type) && this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if ((file === null || file === void 0 ? void 0 : file.type) && this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application' && (file === null || file === void 0 ? void 0 : file.name)) {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    }\n    static fileTypeDetection(inputFilename) {\n        const types = {\n            jpg: 'image',\n            jpeg: 'image',\n            tif: 'image',\n            psd: 'image',\n            bmp: 'image',\n            png: 'image',\n            nef: 'image',\n            tiff: 'image',\n            cr2: 'image',\n            dwg: 'image',\n            cdr: 'image',\n            ai: 'image',\n            indd: 'image',\n            pin: 'image',\n            cdp: 'image',\n            skp: 'image',\n            stp: 'image',\n            '3dm': 'image',\n            mp3: 'audio',\n            wav: 'audio',\n            wma: 'audio',\n            mod: 'audio',\n            m4a: 'audio',\n            compress: 'compress',\n            zip: 'compress',\n            rar: 'compress',\n            '7z': 'compress',\n            lz: 'compress',\n            z01: 'compress',\n            bz2: 'compress',\n            gz: 'compress',\n            pdf: 'pdf',\n            xls: 'xls',\n            xlsx: 'xls',\n            ods: 'xls',\n            mp4: 'video',\n            avi: 'video',\n            wmv: 'video',\n            mpg: 'video',\n            mts: 'video',\n            flv: 'video',\n            '3gp': 'video',\n            vob: 'video',\n            m4v: 'video',\n            mpeg: 'video',\n            m2ts: 'video',\n            mov: 'video',\n            doc: 'doc',\n            docx: 'doc',\n            eps: 'doc',\n            txt: 'doc',\n            odt: 'doc',\n            rtf: 'doc',\n            ppt: 'ppt',\n            pptx: 'ppt',\n            pps: 'ppt',\n            ppsx: 'ppt',\n            odp: 'ppt'\n        };\n        const chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        const extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    }\n}\n/*  MS office  */\n// tslint:disable-next-line:variable-name\nFileType.mime_doc = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n];\n// tslint:disable-next-line:variable-name\nFileType.mime_xsl = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n];\n// tslint:disable-next-line:variable-name\nFileType.mime_ppt = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n];\n/* PSD */\n// tslint:disable-next-line:variable-name\nFileType.mime_psd = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n];\n/* Compressed files */\n// tslint:disable-next-line:variable-name\nFileType.mime_compress = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream',\n    'application/x-zip-compressed',\n    'application/zip-compressed',\n    'application/x-7z-compressed',\n    'application/gzip',\n    'application/x-bzip2'\n];\n\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\nclass FileUploader {\n    constructor(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: (item) => item._file,\n            formatDataFunctionIsAsync: false,\n            url: ''\n        };\n        this.setOptions(options);\n        this.response = new EventEmitter();\n    }\n    setOptions(options) {\n        var _a, _b, _c, _d;\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        (_a = this.options.filters) === null || _a === void 0 ? void 0 : _a.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            (_b = this.options.filters) === null || _b === void 0 ? void 0 : _b.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            (_c = this.options.filters) === null || _c === void 0 ? void 0 : _c.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            (_d = this.options.filters) === null || _d === void 0 ? void 0 : _d.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (let i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    }\n    addToQueue(files, _options, filters) {\n        let options = _options;\n        const list = [];\n        for (const file of files) {\n            list.push(file);\n        }\n        const arrayOfFilters = this._getFilters(filters);\n        const count = this.queue.length;\n        const addedFileItems = [];\n        list.map((some) => {\n            if (!options) {\n                options = this.options;\n            }\n            const temp = new FileLikeObject(some);\n            if (this._isValidFile(temp, arrayOfFilters, options)) {\n                const fileItem = new FileItem(this, some, options);\n                addedFileItems.push(fileItem);\n                this.queue.push(fileItem);\n                this._onAfterAddingFile(fileItem);\n            }\n            else {\n                if (this._failFilterIndex) {\n                    const filter = arrayOfFilters[this._failFilterIndex];\n                    this._onWhenAddingFileFailed(temp, filter, options);\n                }\n            }\n        });\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    }\n    removeFromQueue(value) {\n        const index = this.getIndexOfItem(value);\n        const item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    }\n    clearQueue() {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    }\n    uploadItem(value) {\n        const index = this.getIndexOfItem(value);\n        const item = this.queue[index];\n        const transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        this[transport](item);\n    }\n    cancelItem(value) {\n        const index = this.getIndexOfItem(value);\n        const item = this.queue[index];\n        const prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    }\n    uploadAll() {\n        const items = this.getNotUploadedItems().filter((item) => !item.isUploading);\n        if (!items.length) {\n            return;\n        }\n        items.map((item) => item._prepareToUploading());\n        items[0].upload();\n    }\n    cancelAll() {\n        const items = this.getNotUploadedItems();\n        items.map((item) => item.cancel());\n    }\n    isFile(value) {\n        return isFile(value);\n    }\n    isFileLikeObject(value) {\n        return value instanceof FileLikeObject;\n    }\n    getIndexOfItem(value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    }\n    getNotUploadedItems() {\n        return this.queue.filter((item) => !item.isUploaded);\n    }\n    getReadyItems() {\n        return this.queue\n            .filter((item) => (item.isReady && !item.isUploading))\n            .sort((item1, item2) => item1.index - item2.index);\n    }\n    onAfterAddingAll(fileItems) {\n        return { fileItems };\n    }\n    onBuildItemForm(fileItem, form) {\n        return { fileItem, form };\n    }\n    onAfterAddingFile(fileItem) {\n        return { fileItem };\n    }\n    onWhenAddingFileFailed(item, filter, options) {\n        return { item, filter, options };\n    }\n    onBeforeUploadItem(fileItem) {\n        return { fileItem };\n    }\n    onProgressItem(fileItem, progress) {\n        return { fileItem, progress };\n    }\n    onProgressAll(progress) {\n        return { progress };\n    }\n    onSuccessItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    onErrorItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    onCancelItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    onCompleteItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    onCompleteAll() {\n        return void 0;\n    }\n    _mimeTypeFilter(item) {\n        var _a;\n        return !((item === null || item === void 0 ? void 0 : item.type) && this.options.allowedMimeType && ((_a = this.options.allowedMimeType) === null || _a === void 0 ? void 0 : _a.indexOf(item.type)) === -1);\n    }\n    _fileSizeFilter(item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    }\n    _fileTypeFilter(item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n    }\n    _onErrorItem(item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    }\n    _onCompleteItem(item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        const nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    }\n    _headersGetter(parsedHeaders) {\n        return (name) => {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || undefined;\n            }\n            return parsedHeaders;\n        };\n    }\n    _xhrTransport(item) {\n        // tslint:disable-next-line:no-this-assignment\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        const xhr = item._xhr = new XMLHttpRequest();\n        let sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            const appendFile = () => sendable.append(item.alias, item._file, item.file.name);\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach((key) => {\n                    var _a, _b;\n                    let paramVal = (_a = this.options.additionalParameter) === null || _a === void 0 ? void 0 : _a[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0 && ((_b = item.file) === null || _b === void 0 ? void 0 : _b.name)) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                });\n            }\n            if (appendFile && this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            if (this.options.formatDataFunction) {\n                sendable = this.options.formatDataFunction(item);\n            }\n        }\n        xhr.upload.onprogress = (event) => {\n            const progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            this._onProgressItem(item, progress);\n        };\n        xhr.onload = () => {\n            const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            const response = this._transformResponse(xhr.response, headers);\n            const gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            const method = `_on${gist}Item`;\n            this[method](item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.onerror = () => {\n            const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            const response = this._transformResponse(xhr.response, headers);\n            this._onErrorItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.onabort = () => {\n            const headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            const response = this._transformResponse(xhr.response, headers);\n            this._onCancelItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        if (item.method && item.url) {\n            xhr.open(item.method, item.url, true);\n        }\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (const header of this.options.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (const header of item.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken && this.authTokenHeader) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        };\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then((result) => xhr.send(JSON.stringify(result)));\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    }\n    _getTotalProgress(value = 0) {\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        const notUploaded = this.getNotUploadedItems().length;\n        const uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        const ratio = 100 / this.queue.length;\n        const current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    }\n    _getFilters(filters) {\n        var _a, _b, _c;\n        if (!filters) {\n            return ((_a = this.options) === null || _a === void 0 ? void 0 : _a.filters) || [];\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            const names = filters.match(/[^\\s,]+/g);\n            return ((_b = this.options) === null || _b === void 0 ? void 0 : _b.filters) || []\n                .filter((filter) => (names === null || names === void 0 ? void 0 : names.indexOf(filter.name)) !== -1);\n        }\n        return ((_c = this.options) === null || _c === void 0 ? void 0 : _c.filters) || [];\n    }\n    _render() {\n        return void 0;\n    }\n    _queueLimitFilter() {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    }\n    _isValidFile(file, filters, options) {\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every((filter) => {\n            if (this._failFilterIndex) {\n                this._failFilterIndex++;\n            }\n            return filter.fn.call(this, file, options);\n        });\n    }\n    _isSuccessCode(status) {\n        return (status >= 200 && status < 300) || status === 304;\n    }\n    _transformResponse(response, headers) {\n        return response;\n    }\n    _parseHeaders(headers) {\n        const parsed = {};\n        let key;\n        let val;\n        let i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map((line) => {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        });\n        return parsed;\n    }\n    _onWhenAddingFileFailed(item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    }\n    _onAfterAddingFile(item) {\n        this.onAfterAddingFile(item);\n    }\n    _onAfterAddingAll(items) {\n        this.onAfterAddingAll(items);\n    }\n    _onBeforeUploadItem(item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    }\n    _onBuildItemForm(item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    }\n    _onProgressItem(item, progress) {\n        const total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    }\n    _onSuccessItem(item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    }\n    _onCancelItem(item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    }\n}\n\nclass FileSelectDirective {\n    constructor(element) {\n        // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n        this.onFileSelected = new EventEmitter();\n        this.element = element;\n    }\n    getOptions() {\n        var _a;\n        return (_a = this.uploader) === null || _a === void 0 ? void 0 : _a.options;\n    }\n    getFilters() {\n        return '';\n    }\n    isEmptyAfterSelection() {\n        return !!this.element.nativeElement.attributes.multiple;\n    }\n    onChange() {\n        var _a;\n        const files = this.element.nativeElement.files;\n        const options = this.getOptions();\n        const filters = this.getFilters();\n        (_a = this.uploader) === null || _a === void 0 ? void 0 : _a.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    }\n}\nFileSelectDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: FileSelectDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nFileSelectDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"14.2.2\", type: FileSelectDirective, selector: \"[ng2FileSelect]\", inputs: { uploader: \"uploader\" }, outputs: { onFileSelected: \"onFileSelected\" }, host: { listeners: { \"change\": \"onChange()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: FileSelectDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ng2FileSelect]' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { uploader: [{\n                type: Input\n            }], onFileSelected: [{\n                type: Output\n            }], onChange: [{\n                type: HostListener,\n                args: ['change']\n            }] } });\n\nclass FileUploadModule {\n}\nFileUploadModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: FileUploadModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFileUploadModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: FileUploadModule, declarations: [FileDropDirective, FileSelectDirective], imports: [CommonModule], exports: [FileDropDirective, FileSelectDirective] });\nFileUploadModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: FileUploadModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.2\", ngImport: i0, type: FileUploadModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [FileDropDirective, FileSelectDirective],\n                    exports: [FileDropDirective, FileSelectDirective]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,YAAY,EAAEC,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,eAAe;AAC9F,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,MAAMC,iBAAiB,CAAC;EACpBC,WAAW,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,QAAQ,GAAG,IAAIV,YAAY,EAAE;IAClC;IACA,IAAI,CAACW,UAAU,GAAG,IAAIX,YAAY,EAAE;IACpC,IAAI,CAACS,OAAO,GAAGA,OAAO;EAC1B;EACAG,UAAU,GAAG;IACT,IAAIC,EAAE;IACN,OAAO,CAACA,EAAE,GAAG,IAAI,CAACC,QAAQ,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,OAAO;EAC/E;EACAC,UAAU,GAAG;IACT,OAAO,EAAE;EACb;EACAC,MAAM,CAACC,KAAK,EAAE;IACV,IAAIL,EAAE;IACN,MAAMM,QAAQ,GAAG,IAAI,CAACC,YAAY,CAACF,KAAK,CAAC;IACzC,IAAI,CAACC,QAAQ,EAAE;MACX;IACJ;IACA,MAAMJ,OAAO,GAAG,IAAI,CAACH,UAAU,EAAE;IACjC,MAAMS,OAAO,GAAG,IAAI,CAACL,UAAU,EAAE;IACjC,IAAI,CAACM,eAAe,CAACJ,KAAK,CAAC;IAC3B,IAAIH,OAAO,EAAE;MACT,CAACF,EAAE,GAAG,IAAI,CAACC,QAAQ,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACU,UAAU,CAACJ,QAAQ,CAACK,KAAK,EAAET,OAAO,EAAEM,OAAO,CAAC;IAC7G;IACA,IAAI,CAACX,QAAQ,CAACe,IAAI,CAAC,KAAK,CAAC;IACzB,IAAI,CAACd,UAAU,CAACc,IAAI,CAACN,QAAQ,CAACK,KAAK,CAAC;EACxC;EACAE,UAAU,CAACR,KAAK,EAAE;IACd,MAAMC,QAAQ,GAAG,IAAI,CAACC,YAAY,CAACF,KAAK,CAAC;IACzC,IAAI,CAAC,IAAI,CAACS,UAAU,CAACR,QAAQ,CAACS,KAAK,CAAC,EAAE;MAClC;IACJ;IACAT,QAAQ,CAACU,UAAU,GAAG,MAAM;IAC5B,IAAI,CAACP,eAAe,CAACJ,KAAK,CAAC;IAC3B,IAAI,CAACR,QAAQ,CAACe,IAAI,CAAC,IAAI,CAAC;EAC5B;EACAK,WAAW,CAACZ,KAAK,EAAE;IACf,IAAI,IAAI,CAACT,OAAO,EAAE;MACd,IAAIS,KAAK,CAACa,aAAa,KAAK,IAAI,CAACtB,OAAO,CAAC,CAAC,CAAC,EAAE;QACzC;MACJ;IACJ;IACA,IAAI,CAACa,eAAe,CAACJ,KAAK,CAAC;IAC3B,IAAI,CAACR,QAAQ,CAACe,IAAI,CAAC,KAAK,CAAC;EAC7B;EACAL,YAAY,CAACF,KAAK,EAAE;IAChB,OAAOA,KAAK,CAACc,YAAY,GAAGd,KAAK,CAACc,YAAY,GAAGd,KAAK,CAACe,aAAa,CAACD,YAAY,CAAC,CAAC;EACvF;;EACAV,eAAe,CAACJ,KAAK,EAAE;IACnBA,KAAK,CAACgB,cAAc,EAAE;IACtBhB,KAAK,CAACiB,eAAe,EAAE;EAC3B;EACAR,UAAU,CAACC,KAAK,EAAE;IACd,IAAI,CAACA,KAAK,EAAE;MACR,OAAO,KAAK;IAChB;IACA,IAAIA,KAAK,CAACQ,OAAO,EAAE;MACf,OAAOR,KAAK,CAACQ,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC,MACI,IAAIR,KAAK,CAACS,QAAQ,EAAE;MACrB,OAAOT,KAAK,CAACS,QAAQ,CAAC,OAAO,CAAC;IAClC,CAAC,MACI;MACD,OAAO,KAAK;IAChB;EACJ;AACJ;AACA9B,iBAAiB,CAAC+B,IAAI;EAAA,iBAAwF/B,iBAAiB,EAA3BR,EAAE,mBAA2CA,EAAE,CAACwC,UAAU;AAAA,CAA4C;AAC1MhC,iBAAiB,CAACiC,IAAI,kBAD8EzC,EAAE;EAAA,MACJQ,iBAAiB;EAAA;EAAA;IAAA;MADfR,EAAE;QAAA,OACJ,kBAAc;MAAA;QAAA,OAAd,sBAAkB;MAAA;QAAA,OAAlB,uBAAmB;MAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;EAAA;AAAA,EAAkQ;AACvX;EAAA,mDAFoGA,EAAE,mBAEXQ,iBAAiB,EAAc,CAAC;IAC/GkC,IAAI,EAAExC,SAAS;IACfyC,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAgB,CAAC;EACxC,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEF,IAAI,EAAE1C,EAAE,CAACwC;IAAW,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEzB,QAAQ,EAAE,CAAC;MAC5F2B,IAAI,EAAEvC;IACV,CAAC,CAAC;IAAEQ,QAAQ,EAAE,CAAC;MACX+B,IAAI,EAAEtC;IACV,CAAC,CAAC;IAAEQ,UAAU,EAAE,CAAC;MACb8B,IAAI,EAAEtC;IACV,CAAC,CAAC;IAAEc,MAAM,EAAE,CAAC;MACTwB,IAAI,EAAErC,YAAY;MAClBsC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC;IAC7B,CAAC,CAAC;IAAEhB,UAAU,EAAE,CAAC;MACbe,IAAI,EAAErC,YAAY;MAClBsC,IAAI,EAAE,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC;IACjC,CAAC,CAAC;IAAEZ,WAAW,EAAE,CAAC;MACdW,IAAI,EAAErC,YAAY;MAClBsC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;IAClC,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAME,cAAc,CAAC;EACjBpC,WAAW,CAACqC,WAAW,EAAE;IACrB,IAAI,CAACC,OAAO,GAAGD,WAAW;IAC1B,MAAME,gBAAgB,GAAGF,WAAW,YAAYG,gBAAgB,GAAGH,WAAW,CAACI,KAAK,GAAGJ,WAAW;IAClG,MAAMK,OAAO,GAAG,OAAOH,gBAAgB,KAAK,QAAQ,GAAG,UAAU,GAAG,QAAQ;IAC5E,MAAMI,MAAM,GAAI,cAAaD,OAAQ,EAAC;IACtC,IAAI,CAACC,MAAM,CAAC,CAACJ,gBAAgB,CAAC;EAClC;EACAK,mBAAmB,CAACC,IAAI,EAAE;IACtB,IAAI,CAACC,gBAAgB,GAAG,KAAK,CAAC;IAC9B,IAAI,CAACC,IAAI,GAAG,KAAK,CAAC;IAClB,IAAI,CAACd,IAAI,GAAI,QAAOY,IAAI,CAACG,KAAK,CAACH,IAAI,CAACI,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAACC,WAAW,EAAG,EAAC;IACzE,IAAI,CAACC,IAAI,GAAGN,IAAI,CAACG,KAAK,CAACH,IAAI,CAACI,WAAW,CAAC,GAAG,CAAC,GAAGJ,IAAI,CAACI,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EAC9E;EACAG,iBAAiB,CAACC,MAAM,EAAE;IACtB,IAAI,CAACN,IAAI,GAAGM,MAAM,CAACN,IAAI;IACvB,IAAI,CAACd,IAAI,GAAGoB,MAAM,CAACpB,IAAI;IACvB,IAAI,CAACkB,IAAI,GAAGE,MAAM,CAACF,IAAI;EAC3B;AACJ;AAEA,MAAMG,QAAQ,CAAC;EACXtD,WAAW,CAACM,QAAQ,EAAEiD,IAAI,EAAEhD,OAAO,EAAE;IACjC,IAAI,CAACiD,GAAG,GAAG,GAAG;IACd,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAAC5D,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACiD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAAChD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC4D,IAAI,GAAG,IAAI/B,cAAc,CAACmB,IAAI,CAAC;IACpC,IAAI,CAACa,KAAK,GAAGb,IAAI;IACjB,IAAIjD,QAAQ,CAACC,OAAO,EAAE;MAClB,IAAI,CAACoC,MAAM,GAAGrC,QAAQ,CAACC,OAAO,CAACoC,MAAM,IAAI,MAAM;MAC/C,IAAI,CAAC0B,KAAK,GAAG/D,QAAQ,CAACC,OAAO,CAAC+D,SAAS,IAAI,MAAM;IACrD;IACA,IAAI,CAACd,GAAG,GAAGlD,QAAQ,CAACC,OAAO,CAACiD,GAAG;EACnC;EACAe,MAAM,GAAG;IACL,IAAI;MACA,IAAI,CAACjE,QAAQ,CAACkE,UAAU,CAAC,IAAI,CAAC;IAClC,CAAC,CACD,OAAOC,CAAC,EAAE;MACN,IAAI,CAACnE,QAAQ,CAACoE,eAAe,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAC9C,IAAI,CAACpE,QAAQ,CAACqE,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/C;EACJ;EACAC,MAAM,GAAG;IACL,IAAI,CAACtE,QAAQ,CAACuE,UAAU,CAAC,IAAI,CAAC;EAClC;EACAC,MAAM,GAAG;IACL,IAAI,CAACxE,QAAQ,CAACyE,eAAe,CAAC,IAAI,CAAC;EACvC;EACAC,cAAc,GAAG;IACb,OAAO,KAAK,CAAC;EACjB;EACAC,WAAW,CAACC,IAAI,EAAE;IACd,OAAO;MAAEA;IAAK,CAAC;EACnB;EACAC,UAAU,CAACjB,QAAQ,EAAE;IACjB,OAAO;MAAEA;IAAS,CAAC;EACvB;EACAkB,SAAS,CAACC,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,EAAE;IACjC,OAAO;MAAE4B,QAAQ;MAAEC,MAAM;MAAE7B;IAAQ,CAAC;EACxC;EACA8B,OAAO,CAACF,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,EAAE;IAC/B,OAAO;MAAE4B,QAAQ;MAAEC,MAAM;MAAE7B;IAAQ,CAAC;EACxC;EACA+B,QAAQ,CAACH,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,EAAE;IAChC,OAAO;MAAE4B,QAAQ;MAAEC,MAAM;MAAE7B;IAAQ,CAAC;EACxC;EACAgC,UAAU,CAACJ,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,EAAE;IAClC,OAAO;MAAE4B,QAAQ;MAAEC,MAAM;MAAE7B;IAAQ,CAAC;EACxC;EACAiC,eAAe,GAAG;IACd,IAAI,CAAC9B,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACc,cAAc,EAAE;EACzB;EACAW,YAAY,CAACT,IAAI,EAAE;IACf,IAAI,CAACD,WAAW,CAACC,IAAI,CAAC;EAC1B;EACAU,WAAW,CAAC1B,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACiB,UAAU,CAACjB,QAAQ,CAAC;EAC7B;EACA2B,UAAU,CAACR,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,EAAE;IAClC,IAAI,CAACG,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,QAAQ,GAAG,GAAG;IACnB,IAAI,CAAC4B,KAAK,GAAGC,SAAS;IACtB,IAAI,CAACX,SAAS,CAACC,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,CAAC;EAC7C;EACAuC,QAAQ,CAACX,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,EAAE;IAChC,IAAI,CAACG,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAAC4B,KAAK,GAAGC,SAAS;IACtB,IAAI,CAACR,OAAO,CAACF,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,CAAC;EAC3C;EACAwC,SAAS,CAACZ,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,EAAE;IACjC,IAAI,CAACG,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACC,QAAQ,GAAG,CAAC;IACjB,IAAI,CAAC4B,KAAK,GAAGC,SAAS;IACtB,IAAI,CAACP,QAAQ,CAACH,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,CAAC;EAC5C;EACAyC,WAAW,CAACb,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,EAAE;IACnC,IAAI,CAACgC,UAAU,CAACJ,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,CAAC;IAC1C,IAAI,IAAI,CAACnD,QAAQ,CAACC,OAAO,CAAC4F,iBAAiB,EAAE;MACzC,IAAI,CAACrB,MAAM,EAAE;IACjB;EACJ;EACAsB,mBAAmB,GAAG;IAClB,IAAI,CAACN,KAAK,GAAG,IAAI,CAACA,KAAK,IAAI,EAAE,IAAI,CAACxF,QAAQ,CAAC+F,UAAU;IACrD,IAAI,CAACzC,OAAO,GAAG,IAAI;EACvB;AACJ;AAEA,MAAM0C,QAAQ,CAAC;EACX,OAAOC,YAAY,CAACpC,IAAI,EAAE;IACtB,IAAI9D,EAAE,EAAEmG,EAAE,EAAEC,EAAE;IACd,IAAIC,SAAS,GAAG,aAAa;IAC7B,IAAI,CAACvC,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAAClC,IAAI,KAAK,IAAI,CAAC0E,QAAQ,CAAC/E,OAAO,CAACuC,IAAI,CAAClC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MACpGyE,SAAS,GAAG,OAAO;IACvB,CAAC,MACI,IAAI,CAACrG,EAAE,GAAG8D,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAAClC,IAAI,MAAM,IAAI,IAAI5B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACuG,KAAK,CAAC,SAAS,CAAC,EAAE;MAC5HF,SAAS,GAAG,OAAO;IACvB,CAAC,MACI,IAAI,CAACF,EAAE,GAAGrC,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAAClC,IAAI,MAAM,IAAI,IAAIuE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,KAAK,CAAC,SAAS,CAAC,EAAE;MAC5HF,SAAS,GAAG,OAAO;IACvB,CAAC,MACI,IAAI,CAACD,EAAE,GAAGtC,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAAClC,IAAI,MAAM,IAAI,IAAIwE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,KAAK,CAAC,SAAS,CAAC,EAAE;MAC5HF,SAAS,GAAG,OAAO;IACvB,CAAC,MACI,IAAI,CAACvC,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAAClC,IAAI,MAAM,iBAAiB,EAAE;MACpFyE,SAAS,GAAG,KAAK;IACrB,CAAC,MACI,IAAI,CAACvC,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAAClC,IAAI,KAAK,IAAI,CAAC4E,aAAa,CAACjF,OAAO,CAACuC,IAAI,CAAClC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MAC9GyE,SAAS,GAAG,UAAU;IAC1B,CAAC,MACI,IAAI,CAACvC,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAAClC,IAAI,KAAK,IAAI,CAAC6E,QAAQ,CAAClF,OAAO,CAACuC,IAAI,CAAClC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MACzGyE,SAAS,GAAG,KAAK;IACrB,CAAC,MACI,IAAI,CAACvC,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAAClC,IAAI,KAAK,IAAI,CAAC8E,QAAQ,CAACnF,OAAO,CAACuC,IAAI,CAAClC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MACzGyE,SAAS,GAAG,KAAK;IACrB,CAAC,MACI,IAAI,CAACvC,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAAClC,IAAI,KAAK,IAAI,CAAC+E,QAAQ,CAACpF,OAAO,CAACuC,IAAI,CAAClC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MACzGyE,SAAS,GAAG,KAAK;IACrB;IACA,IAAIA,SAAS,KAAK,aAAa,KAAKvC,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAAChB,IAAI,CAAC,EAAE;MACxFuD,SAAS,GAAG,IAAI,CAACO,iBAAiB,CAAC9C,IAAI,CAAChB,IAAI,CAAC;IACjD;IACA,OAAOuD,SAAS;EACpB;EACA,OAAOO,iBAAiB,CAACC,aAAa,EAAE;IACpC,MAAM9F,KAAK,GAAG;MACV+F,GAAG,EAAE,OAAO;MACZC,IAAI,EAAE,OAAO;MACbC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,IAAI,EAAE,OAAO;MACbC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,EAAE,EAAE,OAAO;MACXC,IAAI,EAAE,OAAO;MACbC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZ,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,QAAQ,EAAE,UAAU;MACpBC,GAAG,EAAE,UAAU;MACfC,GAAG,EAAE,UAAU;MACf,IAAI,EAAE,UAAU;MAChBC,EAAE,EAAE,UAAU;MACdC,GAAG,EAAE,UAAU;MACfC,GAAG,EAAE,UAAU;MACfC,EAAE,EAAE,UAAU;MACdC,GAAG,EAAE,KAAK;MACVC,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,KAAK;MACXC,GAAG,EAAE,KAAK;MACVC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZ,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,OAAO;MACZC,IAAI,EAAE,OAAO;MACbC,IAAI,EAAE,OAAO;MACbC,GAAG,EAAE,OAAO;MACZC,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,KAAK;MACXC,GAAG,EAAE,KAAK;MACVC,GAAG,EAAE,KAAK;MACVC,GAAG,EAAE,KAAK;MACVC,GAAG,EAAE,KAAK;MACVC,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,KAAK;MACXC,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,KAAK;MACXC,GAAG,EAAE;IACT,CAAC;IACD,MAAMC,MAAM,GAAGxD,aAAa,CAACyD,KAAK,CAAC,GAAG,CAAC;IACvC,IAAID,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE;MACnB,OAAO,aAAa;IACxB;IACA,MAAMC,SAAS,GAAGH,MAAM,CAACA,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC,CAAC1H,WAAW,EAAE;IACzD,IAAI9B,KAAK,CAACyJ,SAAS,CAAC,KAAK9E,SAAS,EAAE;MAChC,OAAO,aAAa;IACxB,CAAC,MACI;MACD,OAAO3E,KAAK,CAACyJ,SAAS,CAAC;IAC3B;EACJ;AACJ;AACA;AACA;AACAvE,QAAQ,CAACQ,QAAQ,GAAG,CAChB,oBAAoB,EACpB,oBAAoB,EACpB,yEAAyE,EACzE,yEAAyE,EACzE,kDAAkD,EAClD,kDAAkD,CACrD;AACD;AACAR,QAAQ,CAACS,QAAQ,GAAG,CAChB,0BAA0B,EAC1B,0BAA0B,EAC1B,0BAA0B,EAC1B,mEAAmE,EACnE,sEAAsE,EACtE,gDAAgD,EAChD,mDAAmD,EACnD,gDAAgD,EAChD,uDAAuD,CAC1D;AACD;AACAT,QAAQ,CAACU,QAAQ,GAAG,CAChB,+BAA+B,EAC/B,+BAA+B,EAC/B,+BAA+B,EAC/B,+BAA+B,EAC/B,2EAA2E,EAC3E,uEAAuE,EACvE,wEAAwE,EACxE,qDAAqD,EACrD,4DAA4D,EAC5D,4DAA4D,EAC5D,yDAAyD,CAC5D;AACD;AACA;AACAV,QAAQ,CAACK,QAAQ,GAAG,CAChB,iBAAiB,EACjB,mBAAmB,EACnB,WAAW,EACX,uBAAuB,EACvB,iBAAiB,EACjB,gCAAgC,CACnC;AACD;AACA;AACAL,QAAQ,CAACO,aAAa,GAAG,CACrB,oBAAoB,EACpB,yBAAyB,EACzB,sBAAsB,EACtB,mBAAmB,EACnB,8BAA8B,EAC9B,0BAA0B,EAC1B,8BAA8B,EAC9B,4BAA4B,EAC5B,6BAA6B,EAC7B,kBAAkB,EAClB,qBAAqB,CACxB;AAED,SAASiE,MAAM,CAACrI,KAAK,EAAE;EACnB,OAAQsI,IAAI,IAAItI,KAAK,YAAYsI,IAAI;AACzC;AACA,MAAMC,YAAY,CAAC;EACfhL,WAAW,CAACO,OAAO,EAAE;IACjB,IAAI,CAACsD,WAAW,GAAG,KAAK;IACxB,IAAI,CAACoH,KAAK,GAAG,EAAE;IACf,IAAI,CAAC/G,QAAQ,GAAG,CAAC;IACjB,IAAI,CAACmC,UAAU,GAAG,CAAC;IACnB,IAAI,CAAC9F,OAAO,GAAG;MACX2K,UAAU,EAAE,KAAK;MACjBC,OAAO,EAAE,IAAI;MACbtK,OAAO,EAAE,EAAE;MACXsF,iBAAiB,EAAE,KAAK;MACxBiF,gBAAgB,EAAE,KAAK;MACvBC,kBAAkB,EAAGC,IAAI,IAAKA,IAAI,CAAClH,KAAK;MACxCmH,yBAAyB,EAAE,KAAK;MAChC/H,GAAG,EAAE;IACT,CAAC;IACD,IAAI,CAACgI,UAAU,CAACjL,OAAO,CAAC;IACxB,IAAI,CAAC8E,QAAQ,GAAG,IAAI7F,YAAY,EAAE;EACtC;EACAgM,UAAU,CAACjL,OAAO,EAAE;IAChB,IAAIF,EAAE,EAAEmG,EAAE,EAAEC,EAAE,EAAEgF,EAAE;IAClB,IAAI,CAAClL,OAAO,GAAGmL,MAAM,CAACC,MAAM,CAAC,IAAI,CAACpL,OAAO,EAAEA,OAAO,CAAC;IACnD,IAAI,CAACqL,SAAS,GAAG,IAAI,CAACrL,OAAO,CAACqL,SAAS;IACvC,IAAI,CAACC,eAAe,GAAG,IAAI,CAACtL,OAAO,CAACsL,eAAe,IAAI,eAAe;IACtE,IAAI,CAACX,UAAU,GAAG,IAAI,CAAC3K,OAAO,CAAC2K,UAAU;IACzC,CAAC7K,EAAE,GAAG,IAAI,CAACE,OAAO,CAACM,OAAO,MAAM,IAAI,IAAIR,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACyL,OAAO,CAAC;MAAE3I,IAAI,EAAE,YAAY;MAAE4I,EAAE,EAAE,IAAI,CAACC;IAAkB,CAAC,CAAC;IAC/H,IAAI,IAAI,CAACzL,OAAO,CAAC0L,WAAW,EAAE;MAC1B,CAACzF,EAAE,GAAG,IAAI,CAACjG,OAAO,CAACM,OAAO,MAAM,IAAI,IAAI2F,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACsF,OAAO,CAAC;QAAE3I,IAAI,EAAE,UAAU;QAAE4I,EAAE,EAAE,IAAI,CAACG;MAAgB,CAAC,CAAC;IAC/H;IACA,IAAI,IAAI,CAAC3L,OAAO,CAAC4L,eAAe,EAAE;MAC9B,CAAC1F,EAAE,GAAG,IAAI,CAAClG,OAAO,CAACM,OAAO,MAAM,IAAI,IAAI4F,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACqF,OAAO,CAAC;QAAE3I,IAAI,EAAE,UAAU;QAAE4I,EAAE,EAAE,IAAI,CAACK;MAAgB,CAAC,CAAC;IAC/H;IACA,IAAI,IAAI,CAAC7L,OAAO,CAAC8L,eAAe,EAAE;MAC9B,CAACZ,EAAE,GAAG,IAAI,CAAClL,OAAO,CAACM,OAAO,MAAM,IAAI,IAAI4K,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACK,OAAO,CAAC;QAAE3I,IAAI,EAAE,UAAU;QAAE4I,EAAE,EAAE,IAAI,CAACO;MAAgB,CAAC,CAAC;IAC/H;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACtB,KAAK,CAACL,MAAM,EAAE2B,CAAC,EAAE,EAAE;MACxC,IAAI,CAACtB,KAAK,CAACsB,CAAC,CAAC,CAAC/I,GAAG,GAAG,IAAI,CAACjD,OAAO,CAACiD,GAAG;IACxC;EACJ;EACAzC,UAAU,CAACC,KAAK,EAAEwL,QAAQ,EAAE3L,OAAO,EAAE;IACjC,IAAIN,OAAO,GAAGiM,QAAQ;IACtB,MAAMC,IAAI,GAAG,EAAE;IACf,KAAK,MAAMtI,IAAI,IAAInD,KAAK,EAAE;MACtByL,IAAI,CAACC,IAAI,CAACvI,IAAI,CAAC;IACnB;IACA,MAAMwI,cAAc,GAAG,IAAI,CAACC,WAAW,CAAC/L,OAAO,CAAC;IAChD,MAAMgM,KAAK,GAAG,IAAI,CAAC5B,KAAK,CAACL,MAAM;IAC/B,MAAMkC,cAAc,GAAG,EAAE;IACzBL,IAAI,CAACM,GAAG,CAAExJ,IAAI,IAAK;MACf,IAAI,CAAChD,OAAO,EAAE;QACVA,OAAO,GAAG,IAAI,CAACA,OAAO;MAC1B;MACA,MAAMyM,IAAI,GAAG,IAAI5K,cAAc,CAACmB,IAAI,CAAC;MACrC,IAAI,IAAI,CAAC0J,YAAY,CAACD,IAAI,EAAEL,cAAc,EAAEpM,OAAO,CAAC,EAAE;QAClD,MAAM2M,QAAQ,GAAG,IAAI5J,QAAQ,CAAC,IAAI,EAAEC,IAAI,EAAEhD,OAAO,CAAC;QAClDuM,cAAc,CAACJ,IAAI,CAACQ,QAAQ,CAAC;QAC7B,IAAI,CAACjC,KAAK,CAACyB,IAAI,CAACQ,QAAQ,CAAC;QACzB,IAAI,CAACC,kBAAkB,CAACD,QAAQ,CAAC;MACrC,CAAC,MACI;QACD,IAAI,IAAI,CAACE,gBAAgB,EAAE;UACvB,MAAMC,MAAM,GAAGV,cAAc,CAAC,IAAI,CAACS,gBAAgB,CAAC;UACpD,IAAI,CAACE,uBAAuB,CAACN,IAAI,EAAEK,MAAM,EAAE9M,OAAO,CAAC;QACvD;MACJ;IACJ,CAAC,CAAC;IACF,IAAI,IAAI,CAAC0K,KAAK,CAACL,MAAM,KAAKiC,KAAK,EAAE;MAC7B,IAAI,CAACU,iBAAiB,CAACT,cAAc,CAAC;MACtC,IAAI,CAAC5I,QAAQ,GAAG,IAAI,CAACsJ,iBAAiB,EAAE;IAC5C;IACA,IAAI,CAACC,OAAO,EAAE;IACd,IAAI,IAAI,CAAClN,OAAO,CAAC2K,UAAU,EAAE;MACzB,IAAI,CAACwC,SAAS,EAAE;IACpB;EACJ;EACA3I,eAAe,CAACtC,KAAK,EAAE;IACnB,MAAMqD,KAAK,GAAG,IAAI,CAAC6H,cAAc,CAAClL,KAAK,CAAC;IACxC,MAAM6I,IAAI,GAAG,IAAI,CAACL,KAAK,CAACnF,KAAK,CAAC;IAC9B,IAAIwF,IAAI,CAACzH,WAAW,EAAE;MAClByH,IAAI,CAAC1G,MAAM,EAAE;IACjB;IACA,IAAI,CAACqG,KAAK,CAAC2C,MAAM,CAAC9H,KAAK,EAAE,CAAC,CAAC;IAC3B,IAAI,CAAC5B,QAAQ,GAAG,IAAI,CAACsJ,iBAAiB,EAAE;EAC5C;EACAK,UAAU,GAAG;IACT,OAAO,IAAI,CAAC5C,KAAK,CAACL,MAAM,EAAE;MACtB,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,CAACnG,MAAM,EAAE;IAC1B;IACA,IAAI,CAACZ,QAAQ,GAAG,CAAC;EACrB;EACAM,UAAU,CAAC/B,KAAK,EAAE;IACd,MAAMqD,KAAK,GAAG,IAAI,CAAC6H,cAAc,CAAClL,KAAK,CAAC;IACxC,MAAM6I,IAAI,GAAG,IAAI,CAACL,KAAK,CAACnF,KAAK,CAAC;IAC9B,MAAMgI,SAAS,GAAG,IAAI,CAACvN,OAAO,CAAC4K,OAAO,GAAG,eAAe,GAAG,kBAAkB;IAC7EG,IAAI,CAAClF,mBAAmB,EAAE;IAC1B,IAAI,IAAI,CAACvC,WAAW,EAAE;MAClB;IACJ;IACA,IAAI,CAACA,WAAW,GAAG,IAAI;IACvB,IAAI,CAACiK,SAAS,CAAC,CAACxC,IAAI,CAAC;EACzB;EACAzG,UAAU,CAACpC,KAAK,EAAE;IACd,MAAMqD,KAAK,GAAG,IAAI,CAAC6H,cAAc,CAAClL,KAAK,CAAC;IACxC,MAAM6I,IAAI,GAAG,IAAI,CAACL,KAAK,CAACnF,KAAK,CAAC;IAC9B,MAAMiI,IAAI,GAAG,IAAI,CAACxN,OAAO,CAAC4K,OAAO,GAAGG,IAAI,CAAC0C,IAAI,GAAG1C,IAAI,CAAC2C,KAAK;IAC1D,IAAI3C,IAAI,IAAIA,IAAI,CAACzH,WAAW,EAAE;MAC1BkK,IAAI,CAACG,KAAK,EAAE;IAChB;EACJ;EACAR,SAAS,GAAG;IACR,MAAMS,KAAK,GAAG,IAAI,CAACC,mBAAmB,EAAE,CAACf,MAAM,CAAE/B,IAAI,IAAK,CAACA,IAAI,CAACzH,WAAW,CAAC;IAC5E,IAAI,CAACsK,KAAK,CAACvD,MAAM,EAAE;MACf;IACJ;IACAuD,KAAK,CAACpB,GAAG,CAAEzB,IAAI,IAAKA,IAAI,CAAClF,mBAAmB,EAAE,CAAC;IAC/C+H,KAAK,CAAC,CAAC,CAAC,CAAC5J,MAAM,EAAE;EACrB;EACA8J,SAAS,GAAG;IACR,MAAMF,KAAK,GAAG,IAAI,CAACC,mBAAmB,EAAE;IACxCD,KAAK,CAACpB,GAAG,CAAEzB,IAAI,IAAKA,IAAI,CAAC1G,MAAM,EAAE,CAAC;EACtC;EACAkG,MAAM,CAACrI,KAAK,EAAE;IACV,OAAOqI,MAAM,CAACrI,KAAK,CAAC;EACxB;EACA6L,gBAAgB,CAAC7L,KAAK,EAAE;IACpB,OAAOA,KAAK,YAAYL,cAAc;EAC1C;EACAuL,cAAc,CAAClL,KAAK,EAAE;IAClB,OAAO,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,IAAI,CAACwI,KAAK,CAACrJ,OAAO,CAACa,KAAK,CAAC;EACxE;EACA2L,mBAAmB,GAAG;IAClB,OAAO,IAAI,CAACnD,KAAK,CAACoC,MAAM,CAAE/B,IAAI,IAAK,CAACA,IAAI,CAACxH,UAAU,CAAC;EACxD;EACAyK,aAAa,GAAG;IACZ,OAAO,IAAI,CAACtD,KAAK,CACZoC,MAAM,CAAE/B,IAAI,IAAMA,IAAI,CAAC1H,OAAO,IAAI,CAAC0H,IAAI,CAACzH,WAAY,CAAC,CACrD2K,IAAI,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAKD,KAAK,CAAC3I,KAAK,GAAG4I,KAAK,CAAC5I,KAAK,CAAC;EAC1D;EACA6I,gBAAgB,CAACC,SAAS,EAAE;IACxB,OAAO;MAAEA;IAAU,CAAC;EACxB;EACAC,eAAe,CAAC3B,QAAQ,EAAEhI,IAAI,EAAE;IAC5B,OAAO;MAAEgI,QAAQ;MAAEhI;IAAK,CAAC;EAC7B;EACA4J,iBAAiB,CAAC5B,QAAQ,EAAE;IACxB,OAAO;MAAEA;IAAS,CAAC;EACvB;EACA6B,sBAAsB,CAACzD,IAAI,EAAE+B,MAAM,EAAE9M,OAAO,EAAE;IAC1C,OAAO;MAAE+K,IAAI;MAAE+B,MAAM;MAAE9M;IAAQ,CAAC;EACpC;EACAyO,kBAAkB,CAAC9B,QAAQ,EAAE;IACzB,OAAO;MAAEA;IAAS,CAAC;EACvB;EACA+B,cAAc,CAAC/B,QAAQ,EAAEhJ,QAAQ,EAAE;IAC/B,OAAO;MAAEgJ,QAAQ;MAAEhJ;IAAS,CAAC;EACjC;EACAgL,aAAa,CAAChL,QAAQ,EAAE;IACpB,OAAO;MAAEA;IAAS,CAAC;EACvB;EACAiL,aAAa,CAAC7D,IAAI,EAAEjG,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,EAAE;IAC3C,OAAO;MAAE6H,IAAI;MAAEjG,QAAQ;MAAEC,MAAM;MAAE7B;IAAQ,CAAC;EAC9C;EACA2L,WAAW,CAAC9D,IAAI,EAAEjG,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,EAAE;IACzC,OAAO;MAAE6H,IAAI;MAAEjG,QAAQ;MAAEC,MAAM;MAAE7B;IAAQ,CAAC;EAC9C;EACA4L,YAAY,CAAC/D,IAAI,EAAEjG,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,EAAE;IAC1C,OAAO;MAAE6H,IAAI;MAAEjG,QAAQ;MAAEC,MAAM;MAAE7B;IAAQ,CAAC;EAC9C;EACA6L,cAAc,CAAChE,IAAI,EAAEjG,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,EAAE;IAC5C,OAAO;MAAE6H,IAAI;MAAEjG,QAAQ;MAAEC,MAAM;MAAE7B;IAAQ,CAAC;EAC9C;EACA8L,aAAa,GAAG;IACZ,OAAO,KAAK,CAAC;EACjB;EACAjD,eAAe,CAAChB,IAAI,EAAE;IAClB,IAAIjL,EAAE;IACN,OAAO,EAAE,CAACiL,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACrJ,IAAI,KAAK,IAAI,CAAC1B,OAAO,CAAC8L,eAAe,IAAI,CAAC,CAAChM,EAAE,GAAG,IAAI,CAACE,OAAO,CAAC8L,eAAe,MAAM,IAAI,IAAIhM,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACuB,OAAO,CAAC0J,IAAI,CAACrJ,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;EAChN;EACAiK,eAAe,CAACZ,IAAI,EAAE;IAClB,OAAO,EAAE,IAAI,CAAC/K,OAAO,CAAC0L,WAAW,IAAIX,IAAI,CAACvI,IAAI,GAAG,IAAI,CAACxC,OAAO,CAAC0L,WAAW,CAAC;EAC9E;EACAG,eAAe,CAACd,IAAI,EAAE;IAClB,OAAO,EAAE,IAAI,CAAC/K,OAAO,CAAC4L,eAAe,IACjC,IAAI,CAAC5L,OAAO,CAAC4L,eAAe,CAACvK,OAAO,CAAC0E,QAAQ,CAACC,YAAY,CAAC+E,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;EACjF;EACA3G,YAAY,CAAC2G,IAAI,EAAEjG,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,EAAE;IAC1C6H,IAAI,CAACtF,QAAQ,CAACX,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,CAAC;IACxC,IAAI,CAAC2L,WAAW,CAAC9D,IAAI,EAAEjG,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,CAAC;EACrD;EACAiB,eAAe,CAAC4G,IAAI,EAAEjG,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,EAAE;IAC7C6H,IAAI,CAACpF,WAAW,CAACb,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,CAAC;IAC3C,IAAI,CAAC6L,cAAc,CAAChE,IAAI,EAAEjG,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,CAAC;IACpD,MAAM+L,QAAQ,GAAG,IAAI,CAACjB,aAAa,EAAE,CAAC,CAAC,CAAC;IACxC,IAAI,CAAC1K,WAAW,GAAG,KAAK;IACxB,IAAI2L,QAAQ,EAAE;MACVA,QAAQ,CAACjL,MAAM,EAAE;MACjB;IACJ;IACA,IAAI,CAACgL,aAAa,EAAE;IACpB,IAAI,CAACrL,QAAQ,GAAG,IAAI,CAACsJ,iBAAiB,EAAE;IACxC,IAAI,CAACC,OAAO,EAAE;EAClB;EACAgC,cAAc,CAACC,aAAa,EAAE;IAC1B,OAAQvM,IAAI,IAAK;MACb,IAAIA,IAAI,EAAE;QACN,OAAOuM,aAAa,CAACvM,IAAI,CAACD,WAAW,EAAE,CAAC,IAAI6C,SAAS;MACzD;MACA,OAAO2J,aAAa;IACxB,CAAC;EACL;EACAC,aAAa,CAACrE,IAAI,EAAE;IAChB;IACA;IACA,MAAMsE,IAAI,GAAG,IAAI;IACjB,MAAMC,GAAG,GAAGvE,IAAI,CAAC0C,IAAI,GAAG,IAAI8B,cAAc,EAAE;IAC5C,IAAIC,QAAQ;IACZ,IAAI,CAACC,mBAAmB,CAAC1E,IAAI,CAAC;IAC9B,IAAI,OAAOA,IAAI,CAAClH,KAAK,CAACrB,IAAI,KAAK,QAAQ,EAAE;MACrC,MAAM,IAAIkN,SAAS,CAAC,uCAAuC,CAAC;IAChE;IACA,IAAI,CAAC,IAAI,CAAC1P,OAAO,CAAC6K,gBAAgB,EAAE;MAChC2E,QAAQ,GAAG,IAAIG,QAAQ,EAAE;MACzB,IAAI,CAACC,gBAAgB,CAAC7E,IAAI,EAAEyE,QAAQ,CAAC;MACrC,MAAMK,UAAU,GAAG,MAAML,QAAQ,CAACM,MAAM,CAAC/E,IAAI,CAACjH,KAAK,EAAEiH,IAAI,CAAClH,KAAK,EAAEkH,IAAI,CAACnH,IAAI,CAAChB,IAAI,CAAC;MAChF,IAAI,CAAC,IAAI,CAAC5C,OAAO,CAAC+P,qBAAqB,EAAE;QACrCF,UAAU,EAAE;MAChB;MACA;MACA,IAAI,IAAI,CAAC7P,OAAO,CAACgQ,mBAAmB,KAAKxK,SAAS,EAAE;QAChD2F,MAAM,CAAC8E,IAAI,CAAC,IAAI,CAACjQ,OAAO,CAACgQ,mBAAmB,CAAC,CAACE,OAAO,CAAEC,GAAG,IAAK;UAC3D,IAAIrQ,EAAE,EAAEmG,EAAE;UACV,IAAImK,QAAQ,GAAG,CAACtQ,EAAE,GAAG,IAAI,CAACE,OAAO,CAACgQ,mBAAmB,MAAM,IAAI,IAAIlQ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACqQ,GAAG,CAAC;UACnG;UACA,IAAI,OAAOC,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,CAAC/O,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC4E,EAAE,GAAG8E,IAAI,CAACnH,IAAI,MAAM,IAAI,IAAIqC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACrD,IAAI,CAAC,EAAE;YAC3IwN,QAAQ,GAAGA,QAAQ,CAACC,OAAO,CAAC,eAAe,EAAEtF,IAAI,CAACnH,IAAI,CAAChB,IAAI,CAAC;UAChE;UACA4M,QAAQ,CAACM,MAAM,CAACK,GAAG,EAAEC,QAAQ,CAAC;QAClC,CAAC,CAAC;MACN;MACA,IAAIP,UAAU,IAAI,IAAI,CAAC7P,OAAO,CAAC+P,qBAAqB,EAAE;QAClDF,UAAU,EAAE;MAChB;IACJ,CAAC,MACI;MACD,IAAI,IAAI,CAAC7P,OAAO,CAAC8K,kBAAkB,EAAE;QACjC0E,QAAQ,GAAG,IAAI,CAACxP,OAAO,CAAC8K,kBAAkB,CAACC,IAAI,CAAC;MACpD;IACJ;IACAuE,GAAG,CAACtL,MAAM,CAACsM,UAAU,GAAInQ,KAAK,IAAK;MAC/B,MAAMwD,QAAQ,GAAG4M,IAAI,CAACC,KAAK,CAACrQ,KAAK,CAACsQ,gBAAgB,GAAGtQ,KAAK,CAACuQ,MAAM,GAAG,GAAG,GAAGvQ,KAAK,CAACwQ,KAAK,GAAG,CAAC,CAAC;MAC1F,IAAI,CAACC,eAAe,CAAC7F,IAAI,EAAEpH,QAAQ,CAAC;IACxC,CAAC;IACD2L,GAAG,CAACuB,MAAM,GAAG,MAAM;MACf,MAAM3N,OAAO,GAAG,IAAI,CAAC4N,aAAa,CAACxB,GAAG,CAACyB,qBAAqB,EAAE,CAAC;MAC/D,MAAMjM,QAAQ,GAAG,IAAI,CAACkM,kBAAkB,CAAC1B,GAAG,CAACxK,QAAQ,EAAE5B,OAAO,CAAC;MAC/D,MAAM+N,IAAI,GAAG,IAAI,CAACC,cAAc,CAAC5B,GAAG,CAACvK,MAAM,CAAC,GAAG,SAAS,GAAG,OAAO;MAClE,MAAM3C,MAAM,GAAI,MAAK6O,IAAK,MAAK;MAC/B,IAAI,CAAC7O,MAAM,CAAC,CAAC2I,IAAI,EAAEjG,QAAQ,EAAEwK,GAAG,CAACvK,MAAM,EAAE7B,OAAO,CAAC;MACjD,IAAI,CAACiB,eAAe,CAAC4G,IAAI,EAAEjG,QAAQ,EAAEwK,GAAG,CAACvK,MAAM,EAAE7B,OAAO,CAAC;IAC7D,CAAC;IACDoM,GAAG,CAAC6B,OAAO,GAAG,MAAM;MAChB,MAAMjO,OAAO,GAAG,IAAI,CAAC4N,aAAa,CAACxB,GAAG,CAACyB,qBAAqB,EAAE,CAAC;MAC/D,MAAMjM,QAAQ,GAAG,IAAI,CAACkM,kBAAkB,CAAC1B,GAAG,CAACxK,QAAQ,EAAE5B,OAAO,CAAC;MAC/D,IAAI,CAACkB,YAAY,CAAC2G,IAAI,EAAEjG,QAAQ,EAAEwK,GAAG,CAACvK,MAAM,EAAE7B,OAAO,CAAC;MACtD,IAAI,CAACiB,eAAe,CAAC4G,IAAI,EAAEjG,QAAQ,EAAEwK,GAAG,CAACvK,MAAM,EAAE7B,OAAO,CAAC;IAC7D,CAAC;IACDoM,GAAG,CAAC8B,OAAO,GAAG,MAAM;MAChB,MAAMlO,OAAO,GAAG,IAAI,CAAC4N,aAAa,CAACxB,GAAG,CAACyB,qBAAqB,EAAE,CAAC;MAC/D,MAAMjM,QAAQ,GAAG,IAAI,CAACkM,kBAAkB,CAAC1B,GAAG,CAACxK,QAAQ,EAAE5B,OAAO,CAAC;MAC/D,IAAI,CAACmO,aAAa,CAACtG,IAAI,EAAEjG,QAAQ,EAAEwK,GAAG,CAACvK,MAAM,EAAE7B,OAAO,CAAC;MACvD,IAAI,CAACiB,eAAe,CAAC4G,IAAI,EAAEjG,QAAQ,EAAEwK,GAAG,CAACvK,MAAM,EAAE7B,OAAO,CAAC;IAC7D,CAAC;IACD,IAAI6H,IAAI,CAAC3I,MAAM,IAAI2I,IAAI,CAAC9H,GAAG,EAAE;MACzBqM,GAAG,CAACgC,IAAI,CAACvG,IAAI,CAAC3I,MAAM,EAAE2I,IAAI,CAAC9H,GAAG,EAAE,IAAI,CAAC;IACzC;IACAqM,GAAG,CAACnM,eAAe,GAAG4H,IAAI,CAAC5H,eAAe;IAC1C,IAAI,IAAI,CAACnD,OAAO,CAACkD,OAAO,EAAE;MACtB,KAAK,MAAMqO,MAAM,IAAI,IAAI,CAACvR,OAAO,CAACkD,OAAO,EAAE;QACvCoM,GAAG,CAACkC,gBAAgB,CAACD,MAAM,CAAC3O,IAAI,EAAE2O,MAAM,CAACrP,KAAK,CAAC;MACnD;IACJ;IACA,IAAI6I,IAAI,CAAC7H,OAAO,CAACmH,MAAM,EAAE;MACrB,KAAK,MAAMkH,MAAM,IAAIxG,IAAI,CAAC7H,OAAO,EAAE;QAC/BoM,GAAG,CAACkC,gBAAgB,CAACD,MAAM,CAAC3O,IAAI,EAAE2O,MAAM,CAACrP,KAAK,CAAC;MACnD;IACJ;IACA,IAAI,IAAI,CAACmJ,SAAS,IAAI,IAAI,CAACC,eAAe,EAAE;MACxCgE,GAAG,CAACkC,gBAAgB,CAAC,IAAI,CAAClG,eAAe,EAAE,IAAI,CAACD,SAAS,CAAC;IAC9D;IACAiE,GAAG,CAACmC,kBAAkB,GAAG,YAAY;MACjC,IAAInC,GAAG,CAACoC,UAAU,IAAInC,cAAc,CAACoC,IAAI,EAAE;QACvCtC,IAAI,CAACvK,QAAQ,CAACpE,IAAI,CAAC4O,GAAG,CAACsC,YAAY,CAAC;MACxC;IACJ,CAAC;IACD,IAAI,IAAI,CAAC5R,OAAO,CAACgL,yBAAyB,EAAE;MACxCwE,QAAQ,CAACqC,IAAI,CAAEC,MAAM,IAAKxC,GAAG,CAACyC,IAAI,CAACC,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC,CAAC,CAAC;IAC/D,CAAC,MACI;MACDxC,GAAG,CAACyC,IAAI,CAACvC,QAAQ,CAAC;IACtB;IACA,IAAI,CAACtC,OAAO,EAAE;EAClB;EACAD,iBAAiB,CAAC/K,KAAK,GAAG,CAAC,EAAE;IACzB,IAAI,IAAI,CAAClC,OAAO,CAAC4F,iBAAiB,EAAE;MAChC,OAAO1D,KAAK;IAChB;IACA,MAAMgQ,WAAW,GAAG,IAAI,CAACrE,mBAAmB,EAAE,CAACxD,MAAM;IACrD,MAAM8H,QAAQ,GAAGD,WAAW,GAAG,IAAI,CAACxH,KAAK,CAACL,MAAM,GAAG6H,WAAW,GAAG,IAAI,CAACxH,KAAK,CAACL,MAAM;IAClF,MAAM+H,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC1H,KAAK,CAACL,MAAM;IACrC,MAAMgI,OAAO,GAAGnQ,KAAK,GAAGkQ,KAAK,GAAG,GAAG;IACnC,OAAO7B,IAAI,CAACC,KAAK,CAAC2B,QAAQ,GAAGC,KAAK,GAAGC,OAAO,CAAC;EACjD;EACAhG,WAAW,CAAC/L,OAAO,EAAE;IACjB,IAAIR,EAAE,EAAEmG,EAAE,EAAEC,EAAE;IACd,IAAI,CAAC5F,OAAO,EAAE;MACV,OAAO,CAAC,CAACR,EAAE,GAAG,IAAI,CAACE,OAAO,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACQ,OAAO,KAAK,EAAE;IACtF;IACA,IAAIgS,KAAK,CAACC,OAAO,CAACjS,OAAO,CAAC,EAAE;MACxB,OAAOA,OAAO;IAClB;IACA,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MAC7B,MAAMkS,KAAK,GAAGlS,OAAO,CAAC+F,KAAK,CAAC,UAAU,CAAC;MACvC,OAAO,CAAC,CAACJ,EAAE,GAAG,IAAI,CAACjG,OAAO,MAAM,IAAI,IAAIiG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC3F,OAAO,KAAK,EAAE,CAC7EwM,MAAM,CAAEA,MAAM,IAAK,CAAC0F,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAACnR,OAAO,CAACyL,MAAM,CAAClK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9G;IACA,OAAO,CAAC,CAACsD,EAAE,GAAG,IAAI,CAAClG,OAAO,MAAM,IAAI,IAAIkG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC5F,OAAO,KAAK,EAAE;EACtF;EACA4M,OAAO,GAAG;IACN,OAAO,KAAK,CAAC;EACjB;EACAzB,iBAAiB,GAAG;IAChB,OAAO,IAAI,CAACzL,OAAO,CAACyS,UAAU,KAAKjN,SAAS,IAAI,IAAI,CAACkF,KAAK,CAACL,MAAM,GAAG,IAAI,CAACrK,OAAO,CAACyS,UAAU;EAC/F;EACA/F,YAAY,CAAC9I,IAAI,EAAEtD,OAAO,EAAEN,OAAO,EAAE;IACjC,IAAI,CAAC6M,gBAAgB,GAAG,CAAC,CAAC;IAC1B,OAAO,CAACvM,OAAO,CAAC+J,MAAM,GAAG,IAAI,GAAG/J,OAAO,CAACoS,KAAK,CAAE5F,MAAM,IAAK;MACtD,IAAI,IAAI,CAACD,gBAAgB,EAAE;QACvB,IAAI,CAACA,gBAAgB,EAAE;MAC3B;MACA,OAAOC,MAAM,CAACtB,EAAE,CAACmH,IAAI,CAAC,IAAI,EAAE/O,IAAI,EAAE5D,OAAO,CAAC;IAC9C,CAAC,CAAC;EACN;EACAkR,cAAc,CAACnM,MAAM,EAAE;IACnB,OAAQA,MAAM,IAAI,GAAG,IAAIA,MAAM,GAAG,GAAG,IAAKA,MAAM,KAAK,GAAG;EAC5D;EACAiM,kBAAkB,CAAClM,QAAQ,EAAE5B,OAAO,EAAE;IAClC,OAAO4B,QAAQ;EACnB;EACAgM,aAAa,CAAC5N,OAAO,EAAE;IACnB,MAAM0P,MAAM,GAAG,CAAC,CAAC;IACjB,IAAIzC,GAAG;IACP,IAAI0C,GAAG;IACP,IAAI7G,CAAC;IACL,IAAI,CAAC9I,OAAO,EAAE;MACV,OAAO0P,MAAM;IACjB;IACA1P,OAAO,CAACkH,KAAK,CAAC,IAAI,CAAC,CAACoC,GAAG,CAAEsG,IAAI,IAAK;MAC9B9G,CAAC,GAAG8G,IAAI,CAACzR,OAAO,CAAC,GAAG,CAAC;MACrB8O,GAAG,GAAG2C,IAAI,CAACrQ,KAAK,CAAC,CAAC,EAAEuJ,CAAC,CAAC,CAAC+G,IAAI,EAAE,CAACpQ,WAAW,EAAE;MAC3CkQ,GAAG,GAAGC,IAAI,CAACrQ,KAAK,CAACuJ,CAAC,GAAG,CAAC,CAAC,CAAC+G,IAAI,EAAE;MAC9B,IAAI5C,GAAG,EAAE;QACLyC,MAAM,CAACzC,GAAG,CAAC,GAAGyC,MAAM,CAACzC,GAAG,CAAC,GAAGyC,MAAM,CAACzC,GAAG,CAAC,GAAG,IAAI,GAAG0C,GAAG,GAAGA,GAAG;MAC9D;IACJ,CAAC,CAAC;IACF,OAAOD,MAAM;EACjB;EACA7F,uBAAuB,CAAChC,IAAI,EAAE+B,MAAM,EAAE9M,OAAO,EAAE;IAC3C,IAAI,CAACwO,sBAAsB,CAACzD,IAAI,EAAE+B,MAAM,EAAE9M,OAAO,CAAC;EACtD;EACA4M,kBAAkB,CAAC7B,IAAI,EAAE;IACrB,IAAI,CAACwD,iBAAiB,CAACxD,IAAI,CAAC;EAChC;EACAiC,iBAAiB,CAACY,KAAK,EAAE;IACrB,IAAI,CAACQ,gBAAgB,CAACR,KAAK,CAAC;EAChC;EACA6B,mBAAmB,CAAC1E,IAAI,EAAE;IACtBA,IAAI,CAAC5F,eAAe,EAAE;IACtB,IAAI,CAACsJ,kBAAkB,CAAC1D,IAAI,CAAC;EACjC;EACA6E,gBAAgB,CAAC7E,IAAI,EAAEpG,IAAI,EAAE;IACzBoG,IAAI,CAAC3F,YAAY,CAACT,IAAI,CAAC;IACvB,IAAI,CAAC2J,eAAe,CAACvD,IAAI,EAAEpG,IAAI,CAAC;EACpC;EACAiM,eAAe,CAAC7F,IAAI,EAAEpH,QAAQ,EAAE;IAC5B,MAAMgN,KAAK,GAAG,IAAI,CAAC1D,iBAAiB,CAACtJ,QAAQ,CAAC;IAC9C,IAAI,CAACA,QAAQ,GAAGgN,KAAK;IACrB5F,IAAI,CAAC1F,WAAW,CAAC1B,QAAQ,CAAC;IAC1B,IAAI,CAAC+K,cAAc,CAAC3D,IAAI,EAAEpH,QAAQ,CAAC;IACnC,IAAI,CAACgL,aAAa,CAACgC,KAAK,CAAC;IACzB,IAAI,CAACzD,OAAO,EAAE;EAClB;EACA8F,cAAc,CAACjI,IAAI,EAAEjG,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,EAAE;IAC5C6H,IAAI,CAACzF,UAAU,CAACR,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,CAAC;IAC1C,IAAI,CAAC0L,aAAa,CAAC7D,IAAI,EAAEjG,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,CAAC;EACvD;EACAmO,aAAa,CAACtG,IAAI,EAAEjG,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,EAAE;IAC3C6H,IAAI,CAACrF,SAAS,CAACZ,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,CAAC;IACzC,IAAI,CAAC4L,YAAY,CAAC/D,IAAI,EAAEjG,QAAQ,EAAEC,MAAM,EAAE7B,OAAO,CAAC;EACtD;AACJ;AAEA,MAAM+P,mBAAmB,CAAC;EACtBxT,WAAW,CAACC,OAAO,EAAE;IACjB;IACA,IAAI,CAACwT,cAAc,GAAG,IAAIjU,YAAY,EAAE;IACxC,IAAI,CAACS,OAAO,GAAGA,OAAO;EAC1B;EACAG,UAAU,GAAG;IACT,IAAIC,EAAE;IACN,OAAO,CAACA,EAAE,GAAG,IAAI,CAACC,QAAQ,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACE,OAAO;EAC/E;EACAC,UAAU,GAAG;IACT,OAAO,EAAE;EACb;EACAkT,qBAAqB,GAAG;IACpB,OAAO,CAAC,CAAC,IAAI,CAACzT,OAAO,CAAC0T,aAAa,CAACC,UAAU,CAACC,QAAQ;EAC3D;EACAC,QAAQ,GAAG;IACP,IAAIzT,EAAE;IACN,MAAMW,KAAK,GAAG,IAAI,CAACf,OAAO,CAAC0T,aAAa,CAAC3S,KAAK;IAC9C,MAAMT,OAAO,GAAG,IAAI,CAACH,UAAU,EAAE;IACjC,MAAMS,OAAO,GAAG,IAAI,CAACL,UAAU,EAAE;IACjC,CAACH,EAAE,GAAG,IAAI,CAACC,QAAQ,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACU,UAAU,CAACC,KAAK,EAAET,OAAO,EAAEM,OAAO,CAAC;IAChG,IAAI,CAAC4S,cAAc,CAACxS,IAAI,CAACD,KAAK,CAAC;IAC/B,IAAI,IAAI,CAAC0S,qBAAqB,EAAE,EAAE;MAC9B,IAAI,CAACzT,OAAO,CAAC0T,aAAa,CAAClR,KAAK,GAAG,EAAE;IACzC;EACJ;AACJ;AACA+Q,mBAAmB,CAAC1R,IAAI;EAAA,iBAAwF0R,mBAAmB,EAjwB/BjU,EAAE,mBAiwB+CA,EAAE,CAACwC,UAAU;AAAA,CAA4C;AAC9MyR,mBAAmB,CAACxR,IAAI,kBAlwB4EzC,EAAE;EAAA,MAkwBFiU,mBAAmB;EAAA;EAAA;IAAA;MAlwBnBjU,EAAE;QAAA,OAkwBF,cAAU;MAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;AAAA,EAAyL;AACvS;EAAA,mDAnwBoGA,EAAE,mBAmwBXiU,mBAAmB,EAAc,CAAC;IACjHvR,IAAI,EAAExC,SAAS;IACfyC,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAkB,CAAC;EAC1C,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEF,IAAI,EAAE1C,EAAE,CAACwC;IAAW,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEzB,QAAQ,EAAE,CAAC;MAC5F2B,IAAI,EAAEvC;IACV,CAAC,CAAC;IAAE+T,cAAc,EAAE,CAAC;MACjBxR,IAAI,EAAEtC;IACV,CAAC,CAAC;IAAEmU,QAAQ,EAAE,CAAC;MACX7R,IAAI,EAAErC,YAAY;MAClBsC,IAAI,EAAE,CAAC,QAAQ;IACnB,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM6R,gBAAgB,CAAC;AAEvBA,gBAAgB,CAACjS,IAAI;EAAA,iBAAwFiS,gBAAgB;AAAA,CAAkD;AAC/KA,gBAAgB,CAACC,IAAI,kBAlxB+EzU,EAAE;EAAA,MAkxBQwU;AAAgB,EAAuI;AACrQA,gBAAgB,CAACE,IAAI,kBAnxB+E1U,EAAE;EAAA,UAmxBoCO,YAAY;AAAA,EAAI;AAC1J;EAAA,mDApxBoGP,EAAE,mBAoxBXwU,gBAAgB,EAAc,CAAC;IAC9G9R,IAAI,EAAEpC,QAAQ;IACdqC,IAAI,EAAE,CAAC;MACCgS,OAAO,EAAE,CAACpU,YAAY,CAAC;MACvBqU,YAAY,EAAE,CAACpU,iBAAiB,EAAEyT,mBAAmB,CAAC;MACtDY,OAAO,EAAE,CAACrU,iBAAiB,EAAEyT,mBAAmB;IACpD,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAASzT,iBAAiB,EAAEuD,QAAQ,EAAElB,cAAc,EAAEoR,mBAAmB,EAAEO,gBAAgB,EAAE/I,YAAY"},"metadata":{},"sourceType":"module"}